"90d5d041d8d44c68d2f0e9d7bbfbf2c72d5af17f"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#2=[nil nil ((#(" " 0 1 (fontified t)) . -1170) (undo-tree-id17 . -1) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t)) . -1171) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 1172 (t 23398 38893 281939 542000)) nil (23398 38916 390263 636000) 0 nil]) ((94 . 1226) (#("                                        ;Setting basic location and variables - override those if needed
(defvar emacs-git
  \"/home/simon/github/SimonEnv/Emacs/\"
  \"The location of my Emacs environment settings\")

(defvar default-work-notes-file
  \"/home/simon/github/XJetWorkNotes/XJetWorkNotebook.org\"
  \"The location of my Work Notebook (somewhere on the work server?)\")

(defvar default-personal-notes-file
  \"/home/simon/Notebook/NoteBook.org\"
  \"The location of my personal notebook (mounted from EncFS)\")

(defvar default-init-file
  (concat emacs-git \"SimonNewInit.org\")
  \"My Init File\")

(defvar my-emacs-monitors-num 1
  \"The number of monitors to take into account when calculating the Emacs window size (2/3 of the
  available width)\")

;;emacs persistance directory
(if (not (boundp 'emacs-persistance-dir))
    (setq emacs-persistance-dir \"/home/simon/.emacs.d\")
)

;;Loading the rest of the configuration from my environment
(if (string-equal (file-name-extension default-init-file) \"org\")
  ;;The new way: via org mode
  (org-babel-load-file default-init-file)

  ;;Else: The old way
  (load default-init-file)
  )" 0 40 (fontified t) 40 105 (fontified t face font-lock-comment-face) 105 106 (fontified t) 106 112 (fontified t face font-lock-keyword-face) 112 113 (fontified t) 113 122 (fontified t face font-lock-variable-name-face) 122 125 (fontified t) 125 161 (fontified t face font-lock-string-face) 161 164 (fontified t) 164 211 (fontified t face font-lock-doc-face) 211 215 (fontified t) 215 221 (fontified t face font-lock-keyword-face) 221 222 (fontified t) 222 245 (fontified t face font-lock-variable-name-face) 245 248 (fontified t) 248 303 (fontified t face font-lock-string-face) 303 306 (fontified t) 306 372 (fontified t face font-lock-doc-face) 372 376 (fontified t) 376 382 (fontified t face font-lock-keyword-face) 382 383 (fontified t) 383 407 (fontified t face font-lock-variable-name-face) 407 410 (fontified t face font-lock-variable-name-face) 410 411 (fontified t) 411 413 (fontified t) 413 448 (fontified t face font-lock-string-face) 448 451 (fontified t) 451 510 (fontified t face font-lock-doc-face) 510 513 (fontified t) 513 514 (fontified t) 514 520 (fontified t face font-lock-keyword-face) 520 521 (fontified t) 521 538 (fontified t face font-lock-variable-name-face) 538 539 (fontified t) 539 559 (fontified t) 559 577 (fontified t face font-lock-string-face) 577 579 (fontified t) 579 581 (fontified t) 581 595 (fontified t face font-lock-doc-face) 595 599 (fontified t) 599 605 (fontified t face font-lock-keyword-face) 605 606 (fontified t) 606 627 (fontified t face font-lock-variable-name-face) 627 632 (fontified t) 632 746 (fontified t face font-lock-doc-face) 746 747 (fontified t face font-lock-doc-face help-echo #1="Hidden behind deeper element; move to another line?") 747 748 (fontified t help-echo #1#) 748 750 (fontified t) 750 751 (fontified t face font-lock-comment-delimiter-face) 751 752 (fontified t face font-lock-comment-delimiter-face) 752 780 (fontified t face font-lock-comment-face) 780 781 (fontified t) 781 783 (fontified t face font-lock-keyword-face) 783 854 (fontified t) 854 870 (fontified t face font-lock-string-face) 870 876 (fontified t face font-lock-string-face) 876 878 (fontified t) 878 881 (fontified t) 881 883 (fontified t face font-lock-comment-delimiter-face) 883 941 (fontified t face font-lock-comment-face) 941 942 (fontified t) 942 944 (fontified t face font-lock-keyword-face) 944 973 (fontified t) 973 999 (fontified t) 999 1004 (fontified t face font-lock-string-face) 1004 1006 (fontified t) 1006 1008 (fontified t) 1008 1010 (fontified t face font-lock-comment-delimiter-face) 1010 1036 (fontified t face font-lock-comment-face) 1036 1040 (fontified t) 1040 1078 (fontified t) 1078 1079 (fontified t) 1079 1081 (fontified t) 1081 1083 (fontified t face font-lock-comment-delimiter-face) 1083 1101 (fontified t face font-lock-comment-face) 1101 1128 (fontified t) 1128 1131 (fontified t)) . -94) (undo-tree-id25 . 553) (undo-tree-id26 . 553) (undo-tree-id27 . -597) (undo-tree-id28 . -1131) (undo-tree-id29 . 380) (undo-tree-id30 . 380) (undo-tree-id31 . -411) (undo-tree-id32 . -1078) (undo-tree-id33 . -1078) (undo-tree-id34 . -597) (t 23398 38795 199803 220000)) nil (23398 38916 390323 636000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1225) (undo-tree-id16 . -1) 1226 (t 23398 38792 706876 6000)) nil (23398 38795 193751 290000) 0 nil]) ((#(" " 0 1 (fontified t)) . -1172) (undo-tree-id8 . -1) (undo-tree-id9 . 1) (undo-tree-id10 . 1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t)) . -1173) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 1174 (t 23398 38767 537610 220000)) nil (23398 38792 698085 141000) 0 nil]) ((#("                                        " 0 40 (fontified t)) . -844) (undo-tree-id6 . 40) (undo-tree-id7 . 40) 885) nil (23398 38767 530557 321000) 0 nil]) ((884 . 885) (t 23398 38760 829 973000)) nil (23398 38767 530573 877000) 0 nil]) ((#(" " 0 1 (fontified t)) . -672) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 673) nil (23398 38759 995155 262000) 0 nil]) ((#(" " 0 1 (fontified t)) . -632) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 633 (t 23398 38053 294435 552000)) nil (23398 38759 995181 369000) 0 nil]) nil nil (23398 38759 995188 677000) 0 nil] #2# 1642 8 nil]