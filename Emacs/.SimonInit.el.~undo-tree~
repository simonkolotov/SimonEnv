"7108891e3cdbbb8355d7b1672c27d78160a64dcd"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#("
" 0 1 (fontified t)) . 31677)) nil (23069 52056 170313 44000) 0 nil]) ((#("(defun xjet-python-buffer ()
  \"Send the current (python) buffer to be evaluated in the MetalJet Application\"
  (interactive)
  (write-region (point-min) (point-max) \"/tmp/buffer.py\")
  (shell-command \"xjet-python /tmp/buffer.py\"))
(define-key py-mode-map [(control c) (control j)] 'xjet-python-buffer)

" 0 1 (fontified t) 1 4 (fontified t face font-lock-keyword-face) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 25 (fontified t face font-lock-function-name-face) 25 29 (fontified t) 29 31 (fontified t) 31 109 (fontified t face font-lock-doc-face) 109 141 (fontified t) 141 166 (fontified t) 166 182 (face font-lock-string-face fontified t) 182 184 (fontified t) 184 201 (fontified t) 201 229 (fontified t face font-lock-string-face) 229 232 (fontified t) 232 283 (fontified t) 283 304 (fontified t)) . -31677) (undo-tree-id149 . -304) (undo-tree-id150 . -304) (undo-tree-id151 . -304) (undo-tree-id152 . -304) 31981 (t 23069 51931 142570 610000)) nil (23069 52056 170352 238000) 0 nil]) ((24596 . 24662)) nil (23069 51931 86260 365000) 0 nil]) ((24594 . 24596)) nil (23069 51931 86272 102000) 0 nil]) ((#("
" 0 1 (fontified t)) . 24466)) nil (23069 51931 86277 794000) 0 nil]) ((#(" " 0 1 (fontified t)) . -24466) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) 24467) nil (23069 51931 86319 1000) 0 nil]) ((#(" " 0 1 (fontified t)) . 24466) (#("
" 0 1 (fontified t)) . 24466) (undo-tree-id138 . 1) (undo-tree-id139 . 1)) nil (23069 51931 86332 39000) 0 nil]) ((#("(add-hook 'python-mode-hook
  (lambda ()
    (my-indent-mode))
  )" 0 1 (fontified t) 1 28 (fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 37 (fontified t face font-lock-keyword-face) 37 41 (fontified t) 41 45 (fontified t) 45 59 (fontified t) 59 63 (fontified t) 63 66 (fontified t)) . 24466) (undo-tree-id140 . -66) (undo-tree-id141 . -66) (undo-tree-id142 . -66) (undo-tree-id143 . -66) (undo-tree-id144 . 1) (undo-tree-id145 . -66) (undo-tree-id146 . 66) (undo-tree-id147 . -1) (undo-tree-id148 . -66) 24532) nil (23069 51931 86362 409000) 0 nil]) ((24477 . 24483)) nil (23069 51931 86369 563000) 0 nil]) ((#("+" 0 1 (fontified t)) . 24477) (#("+" 0 1 (fontified t)) . 24477) (#("c" 0 1 (fontified t)) . 24477)) nil (23069 51931 86375 242000) 0 nil]) ((24466 . 24529)) nil (23069 51931 86380 227000) 0 nil]) ((24464 . 24466)) nil (23069 51931 86383 604000) 0 nil]) ((24460 . 24463)) nil (23069 51931 86387 170000) 0 nil]) ((#(" " 0 1 (fontified t)) . 24439) (#(" " 0 1 (fontified t)) . 24439) (#(" " 0 1 (fontified t)) . 24439) (#(" " 0 1 (fontified t)) . 24439) (#(" " 0 1 (fontified t)) . 24439) (#(" " 0 1 (fontified t)) . 24439) (#(" " 0 1 (fontified t)) . 24439) (#(" " 0 1 (fontified t)) . 24439)) nil (23069 51931 86397 141000) 0 nil]) ((#(" " 0 1 (fontified t)) . 24426) (#(" " 0 1 (fontified t)) . 24426) (#(" " 0 1 (fontified t)) . 24426) (#(" " 0 1 (fontified t)) . 24426) (#(" " 0 1 (fontified t)) . 24426) (#(" " 0 1 (fontified t)) . 24426) (#(" " 0 1 (fontified t)) . 24426) (#(" " 0 1 (fontified t)) . 24426)) nil (23069 51931 86411 19000) 0 nil]) ((24447 . 24459) 24457) nil (23069 51931 86419 274000) 0 nil]) ((24426 . 24436)) nil (23069 51931 86423 46000) 0 nil] [nil nil ((24568 . 24570)) ((#("zz" 0 2 (fontified t)) . 24568)) (23069 51889 143206 975000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((24605 . 24611)) ((#("t nil)" 0 6 (fontified t)) . 24605) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (t 23069 51695 518901 178000)) (23069 51695 461532 411000) 0 nil]) ((24571 . 24572)) ((#("q" 0 1 (fontified t)) . 24571)) (23069 51872 416214 179000) 0 nil]) ((#("1" 0 1 (fontified t)) . 24571)) ((24571 . 24572)) (23069 51872 847768 116000) 0 nil]) ((24567 . 24573)) ((#("(set1 " 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 24567) (undo-tree-id89 . -4)) (23069 51873 247732 372000) 0 nil]) ((24517 . 24522)) ((#("setq " 0 5 (fontified t)) . 24517)) (23069 51873 735449 339000) 0 nil]) ((24562 . 24594)) ((#("python-indent-guess-indent-offse" 0 32 (fontified t)) . 24562) (undo-tree-id90 . -32) (undo-tree-id91 . -32)) (23069 51874 235729 857000) 0 nil]) ((24541 . 24562) (t 23069 51517 913426 721000)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 24541) (undo-tree-id92 . -21) (undo-tree-id93 . -21) (undo-tree-id94 . -21) (undo-tree-id95 . -21)) (23069 51874 268399 131000) 0 nil]) ((#("
" 0 1 (fontified t)) . 24451)) ((24451 . 24452)) (23069 51874 301921 176000) 0 nil]) ((#("		    (setq-default indent-tabs-mode nil)
		    (setq-default tab-width 2)" 0 42 (fontified t) 42 74 (fontified t)) . 24451) (undo-tree-id82 . -74) (undo-tree-id84 . -74) (undo-tree-id85 . -20) (undo-tree-id86 . -74) (t 23069 51500 830958 181000)) ((24451 . 24525)) (23069 51874 337079 548000) 0 nil]) ((24617 . 24637) (#("  " 0 2 (fontified t)) . -24617) 24642) ((24617 . 24619) (#("                    " 0 20 (fontified t)) . 24617)) (23069 51874 369429 514000) 0 nil]) ((24571 . 24591) (#("                      " 0 20 (fontified t) 20 22 (fontified t)) . -24571) (undo-tree-id78 . -20) 24598) ((24571 . 24593) (#("                    " 0 20 (fontified t)) . 24571)) (23069 51874 402858 661000) 0 nil]) ((24591 . 24646)) ((#("  (python-guess-indent nil)
  (setq py-indent-offset 2)" 0 2 (fontified t) 2 3 (fontified t) 3 27 (fontified t) 27 28 (fontified t) 28 30 (fontified t) 30 55 (fontified t)) . 24591) (undo-tree-id96 . -27) (undo-tree-id97 . -55) (undo-tree-id98 . -55) (undo-tree-id99 . -55) (undo-tree-id100 . -7) (undo-tree-id101 . -55) (undo-tree-id102 . -55)) (23069 51874 435839 467000) 0 nil]) ((24570 . 24591)) ((#("
                    " 0 1 (fontified t) 1 21 (fontified t)) . 24570) (undo-tree-id103 . -21) (undo-tree-id104 . -1) (undo-tree-id105 . -21) (undo-tree-id106 . -21) (undo-tree-id107 . -21) (undo-tree-id108 . -21) (undo-tree-id109 . -21) (undo-tree-id110 . -21)) (23069 51874 468777 557000) 0 nil]) ((#("  (python-guess-indent nil)
  (setq py-indent-offset 2)" 0 3 (fontified t) 3 55 (fontified t)) . 24339) (undo-tree-id79 . -55) (undo-tree-id80 . -3) (undo-tree-id81 . -55) (t 23069 51459 260251 501000)) ((24339 . 24394)) (23069 51874 502546 981000) 0 nil]) ((24621 . 24624)) ((#("nil" 0 3 (fontified t)) . 24621)) (23069 51874 535621 403000) 0 nil]) ((#("t" 0 1 (fontified t)) . 24621)) ((24621 . 24622)) (23069 51874 569494 683000) 0 nil]) ((#("4" 0 1 (fontified t)) . 24579)) ((24579 . 24580)) (23069 51874 602668 310000) 0 nil]) ((24578 . 24579)) ((#("2" 0 1 (fontified t)) . 24578) (undo-tree-id111 . -1)) (23069 51874 635805 252000) 0 nil]) ((24543 . 24546)) ((#("nil" 0 3 (fontified t)) . 24543)) (23069 51874 669308 771000) 0 nil]) ((#("t" 0 1 (fontified t)) . 24543) (t 23069 51394 937252 677000)) ((24543 . 24544)) (23069 51874 703409 299000) 0 nil]) ((24342 . 24688) (#("setq python-guess-indent nil)
  (setq py-indent-offset 2)

  )

(add-hook 'c++-mode-hook
(lambda ()
  (my-indent-mode)))

(add-hook 'python-mode-hook
(lambda ()
(my-indent-mod" 0 5 (fontified t) 5 30 (fontified t) 30 58 (fontified t) 58 59 (fontified t) 59 64 (fontified t) 64 65 (fontified t) 65 89 (fontified t) 89 90 (fontified t) 90 96 (fontified t face font-lock-keyword-face) 96 100 (fontified t) 100 151 (fontified t) 151 157 (fontified t face font-lock-keyword-face) 157 161 (fontified t) 161 175 (fontified t)) . 24342) (undo-tree-id55 . -162) (undo-tree-id57 . -62) (undo-tree-id59 . -63) (undo-tree-id61 . -99) (undo-tree-id63 . -57) (undo-tree-id65 . -58) (undo-tree-id67 . -120) (undo-tree-id69 . -121) (undo-tree-id71 . -149) (undo-tree-id73 . -160) (undo-tree-id75 . -88) (undo-tree-id77 . -29) 24634 (t 23069 51045 961153 919000)) ((24342 . 24517) (#("python-guess-indent nil)
  (setq py-indent-offset 2)

  )

(add-hook 'c++-mode-hook
(lambda ()
  (my-indent-mode)))
    (add-hook 'python-mode-hook
	    (lambda ()
		    (setq-default indent-tabs-mode t)
		    (setq-default tab-width 4)
		    (setq-default py-indent-tabs-mode t)
	    (add-to-list 'write-file-functions 'delete-trailing-whitespac" 0 52 (fontified t) 52 53 (fontified t) 53 85 (fontified t) 85 91 (fontified t face font-lock-keyword-face) 91 154 (fontified t) 154 160 (fontified t face font-lock-keyword-face) 160 164 (fontified t) 164 201 (fontified t) 201 202 (fontified t) 202 204 (fontified t) 204 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 277 (fontified t) 277 278 (fontified t) 278 279 (fontified t) 279 280 (fontified t) 280 346 (fontified t)) . 24342) (undo-tree-id112 . -279) (undo-tree-id113 . -184) (undo-tree-id114 . -279) (undo-tree-id115 . -164) (undo-tree-id116 . -279) (undo-tree-id117 . -279) (undo-tree-id118 . -279) (undo-tree-id119 . -201)) (23069 51874 736815 941000) 0 nil]) ((24342 . 24347) (t 23069 51040 239333 80000) (#("setq " 0 5 (fontified t)) . 24342) (t 23069 51033 78557 296000) (#("custom-set-variables
 '(python-guess-indent nil)
 '(python-indent-offset 2))

(" 0 79 (fontified t)) . 24407) 24713 (t 23069 50867 920728 695000)) ((24407 . 24486) (24342 . 24347) (#("setq " 0 5 (fontified t)) . 24342)) (23069 51874 770946 309000) 0 nil]) ((24407 . 24486) 24634 (t 23069 50800 972824 957000)) ((#("custom-set-variables
 '(python-guess-indent nil)
 '(python-indent-offset 2))

(" 0 79 (fontified t)) . 24407)) (23069 51874 803003 183000) 0 nil]) ((24342 . 24347) 24629 (t 23069 50725 780179 380000)) ((#("setq " 0 5 (fontified t)) . 24342)) (23069 51874 838571 139000) 0 nil]) ((24437 . 24498) 24568 (t 23069 50667 26019 81000)) ((#("  (my-indent-mode)))

(add-hook 'python-mode-hook
(lambda ()
" 0 51 (fontified t) 51 57 (fontified t face font-lock-keyword-face) 57 61 (fontified t)) . 24437)) (23069 51874 872185 749000) 0 nil]) ((24342 . 24395) (#("setq py-indent-offset 2)" 0 24 (fontified t)) . 24342) (undo-tree-id132 . -24) (undo-tree-id133 . -24)) ((24342 . 24366) (#("python-guess-indent nil)
  (setq py-indent-offset 2)
" 0 25 (fontified t) 25 53 (fontified t)) . 24342) (undo-tree-id130 . -53) (undo-tree-id131 . -53)) (23069 51891 71316 279000) 0 nil]) ((24537 . 24539)) ((#("my" 0 2 (fontified t)) . 24537) (undo-tree-id123 . -2)) (23069 51890 463492 972000) 0 nil]) ((#("xjet" 0 4 (fontified t)) . 24537)) ((24537 . 24541)) (23069 51880 47546 186000) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 24536)) ((24536 . 24537)) (23069 51879 823050 363000) 0 nil]) ((24409 . 24411)) nil (23069 51878 175521 369000) 0 nil]) ((#("xjet" 0 4 (fontified t)) . -24409) (undo-tree-id49 . -4) (undo-tree-id50 . -4)) nil (23069 48382 429476 218000) 0 nil]) ((24074 . 24076)) nil (23069 48382 429484 507000) 0 nil]) ((#("xjet" 0 2 (fontified t face font-lock-function-name-face) 2 4 (fontified t face font-lock-function-name-face)) . -24074) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (t 23069 39659 266762 69000)) nil (23069 48382 429496 395000) 0 nil]) ((5503 . 5512)) nil (23069 39659 255307 383000) 0 nil]) ((5502 . 5503) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 5502) (undo-tree-id48 . -1) 5503) nil (23069 39659 255335 784000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 5503) (#("→" 0 1 (fontified t face font-lock-comment-face)) . 5503) (t 23069 39650 524035 757000)) nil (23069 39659 255346 448000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -1409) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 1410) nil (23069 39650 471650 932000) 0 nil]) ((1389 . 1410)) nil (23069 39650 471665 780000) 0 nil]) ((#("C" 0 1 (fontified t face font-lock-comment-face)) . -1389) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 1390) nil (23069 39650 471745 155000) 0 nil]) ((1386 . 1390)) nil (23069 39650 471752 422000) 0 nil]) ((1379 . 1386)) nil (23069 39650 471756 520000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -1379) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("C" 0 1 (fontified t face font-lock-comment-face)) . -1380) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -1381) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 1382) nil (23069 39650 471787 667000) 0 nil]) ((1374 . 1382)) nil (23069 39650 471796 458000) 0 nil]) ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -1374) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1375) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 1376) nil (23069 39650 471817 834000) 0 nil]) ((1367 . 1376)) nil (23069 39650 471824 555000) 0 nil]) ((1346 . 1367)) nil (23069 39650 471828 449000) 0 nil]) ((#("u" 0 1 (fontified t face font-lock-comment-face)) . -1346) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -1347) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -1348) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 1349) nil (23069 39650 471857 787000) 0 nil]) ((1337 . 1349)) nil (23069 39650 471866 262000) 0 nil]) ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 1337) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 1337)) nil (23069 39650 471876 424000) 0 nil]) ((#("?" 0 1 (fontified t face font-lock-comment-face)) . 1338) (#("(" 0 1 (fontified t face font-lock-comment-face)) . 1338) (undo-tree-id46 . 1) (undo-tree-id47 . -1) (t 23069 39621 295950 733000)) nil (23069 39650 471888 990000) 0 nil]) ((21483 . 21484)) nil (23069 39621 280534 708000) 0 nil]) ((21462 . 21483)) nil (23069 39621 280546 474000) 0 nil]) ((21461 . 21462) (t 23069 39455 617137 251000)) nil (23069 39621 280554 307000) 0 nil]) ((20307 . 20310)) nil (23069 39455 565086 912000) 0 nil]) ((#("a" 0 1 (fontified t)) . 20306) (#("b" 0 1 (fontified t)) . 20306)) nil (23069 39455 565091 107000) 0 nil]) ((20300 . 20303)) nil (23069 39455 565093 250000) 0 nil]) ((#("bat" 0 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face)) . -20300) (undo-tree-id4 . -3) (undo-tree-id5 . -3)) nil (23069 39455 565100 690000) 0 nil]) ((20284 . 20316)) nil (23069 39455 565102 132000) 0 nil]) ((20277 . 20284) (#("       " 0 7 (fontified nil)) . 20276) (undo-tree-id6 . -7) (undo-tree-id7 . -7) (20276 . 20283) (20276 . 20277) (#("       " 0 7 (fontified t)) . 20276) (undo-tree-id8 . -7) (undo-tree-id9 . -7) (undo-tree-id10 . -7) 20283) nil (23069 39455 565108 467000) 0 nil]) ((20275 . 20283) (#("              " 0 14 (fontified t)) . 20275) (undo-tree-id11 . -14) (undo-tree-id12 . -14) (undo-tree-id13 . -14) 20289 (t 23069 39327 549146 374000)) nil (23069 39455 565113 490000) 0 nil]) ((16917 . 16927)) nil (23069 39327 529610 751000) 0 nil]) ((16914 . 16917)) nil (23069 39327 529619 962000) 0 nil]) ((16893 . 16914)) nil (23069 39327 529624 509000) 0 nil]) ((17097 . 17098) (17055 . 17056) (17015 . 17016) (16975 . 16976) (16958 . 16959) (16918 . 16919) (16894 . 16895) (t 23069 39208 114885 222000)) nil (23069 39327 529633 632000) 0 nil] [nil nil ((14854 . 14855) (t 23069 39208 114885 222000)) ((#("
" 0 1 (fontified t)) . 14854)) (23069 39217 348662 583000) 0 nil] [nil nil ((14854 . 14855) (t 23069 39208 114885 222000)) ((#("
" 0 1 (fontified t)) . 14854)) (23069 39216 4546 189000) 0 nil]) ((#("
" 0 1 (fontified t)) . 14713)) nil (23069 39217 349258 176000) 0 nil] [nil nil ((14663 . 14669)) ((#("- [ ] " 0 6 (fontified t)) . 14663) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6)) (23069 39204 117102 8000) 0 nil]) ((#("S" 0 1 (fontified t)) . -14004) (undo-tree-id0 . -1) 14005) nil (23069 39204 117338 24000) 0 nil]) ((14004 . 14005) (t 23069 39042 805060 188000)) nil (23069 39204 117145 48000) 0 nil]) ((#("
" 0 1 (fontified t)) . 12649) (t 23069 38696 513963 693000)) nil (23069 39042 786714 237000) 0 nil] [nil nil ((12649 . 12652) (t 23069 38696 513963 693000)) ((#("orw" 0 3 (fontified t)) . 12649) (undo-tree-id180 . -3) (undo-tree-id181 . -3)) (23069 39037 410794 315000) 0 nil] [nil ([nil nil ((12649 . 12650)) ((#("z" 0 1 (fontified t)) . 12649) (undo-tree-id170 . -1)) (23069 38949 117061 361000) 0 nil]) ((12649 . 12661) (t 23069 38696 513963 693000)) ((#("EmacsGitGoto" 0 12 (fontified t)) . 12649) (undo-tree-id173 . -12) (undo-tree-id174 . -12)) (23069 38951 341187 319000) 0 nil] [nil ([nil nil ((12649 . 12652)) ((#("zzz" 0 3 (fontified t)) . 12649) (undo-tree-id167 . -3)) (23069 38937 173411 221000) 0 nil]) ((12649 . 12657) (t 23069 38696 513963 693000)) ((#("EmacsGIt" 0 8 (fontified t)) . 12649) (undo-tree-id168 . -8) (undo-tree-id169 . -8)) (23069 38937 173640 244000) 0 nil] [nil ([nil nil ((10002 . 10004)) ((#("zz" 0 2 (fontified t face font-lock-string-face)) . 10002) (undo-tree-id166 . -2)) (23069 38708 668700 754000) 0 nil]) ((10000 . 10001) (t 23069 38696 513963 693000)) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 10000)) (23069 38708 668957 585000) 0 nil]) ((9999 . 10000)) ((#("5" 0 1 (fontified t face font-lock-string-face)) . 9999) (t 23069 38696 513963 693000)) (23069 39037 746494 254000) 0 nil]) ((#("8" 0 1 (fontified t face font-lock-string-face)) . 9999) (#("." 0 1 (fontified t face font-lock-string-face)) . 9999) (#("4" 0 1 (fontified t face font-lock-string-face)) . 9999) (undo-tree-id165 . -1) (t 23069 38639 920759 379000)) nil (23069 39036 834931 100000) 0 nil]) ((10006 . 10007) (t 23069 38534 260111 962000)) nil (23069 38639 903373 165000) 0 nil]) ((9622 . 9627)) nil (23069 38534 242648 782000) 0 nil]) ((#("code" 0 4 (fontified t face font-lock-doc-face)) . -9622) (undo-tree-id159 . -4) (undo-tree-id160 . -4)) nil (23069 38534 242729 907000) 0 nil]) ((9420 . 9427)) nil (23069 38534 242739 787000) 0 nil]) ((9417 . 9420)) nil (23069 38534 242743 662000) 0 nil]) ((#("code" 0 4 (fontified t face font-lock-doc-face)) . -9417) (undo-tree-id161 . -4) (undo-tree-id162 . -4)) nil (23069 38534 242753 630000) 0 nil]) ((9220 . 9224)) nil (23069 38534 242758 604000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-doc-face)) . 9220) (#("d" 0 1 (fontified t face font-lock-doc-face)) . 9220) (#("o" 0 1 (fontified t face font-lock-doc-face)) . 9220)) nil (23069 38534 242764 180000) 0 nil]) ((9050 . 9056)) nil (23069 38534 242769 317000) 0 nil]) ((#("code" 0 4 (fontified t face font-lock-doc-face)) . -9050) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (t 23069 38319 455927 637000)) nil (23069 38534 242779 281000) 0 nil]) ((8503 . 8504)) nil (23069 38319 448791 356000) 0 nil]) ((8503 . 8507)) nil (23069 38319 448795 91000) 0 nil]) ((#(" list" 0 5 (fontified t face font-lock-doc-face)) . -8503) (undo-tree-id155 . -5) (undo-tree-id156 . -5)) nil (23069 38319 448801 932000) 0 nil]) ((8499 . 8503)) nil (23069 38319 448803 789000) 0 nil]) ((#("todo" 0 4 (fontified t face font-lock-doc-face)) . -8499) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (t 23068 65121 26974 767000)) nil (23069 38319 448806 515000) 0 nil] [nil ([nil ([nil ([nil nil ((7170 . 7173)) ((#("nil" 0 3 (fontified t)) . 7170) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (t 23068 65097 67715 718000)) (23068 65097 53845 481000) 0 nil]) ((#("f" 0 1 (fontified t)) . 7170) (t 23068 65095 207773 238000)) ((7170 . 7171)) (23068 65119 237195 74000) 0 nil]) ((7170 . 7171)) ((#("f" 0 1 (fontified t)) . 7170) (t 23068 65120 78004 114000)) (23068 65119 684919 874000) 0 nil]) ((#("t" 0 1 (fontified t)) . 7170) (t 23068 65073 531443 587000)) ((7170 . 7171)) (23068 65120 357085 91000) 0 nil]) ((#("
" 0 1 (fontified t)) . 6680)) nil (23068 65120 652894 594000) 0 nil]) ((#("(define-key yas-minor-mode-map (kbd \"M-RET\")     'dabbrev-expand)" 0 31 (fontified t) 31 36 (fontified t) 36 43 (face font-lock-string-face fontified t) 43 65 (fontified t)) . -6680) (undo-tree-id145 . -65) (undo-tree-id146 . -65) (undo-tree-id147 . -65) (undo-tree-id148 . 1) (undo-tree-id149 . -65) (undo-tree-id150 . 65) (undo-tree-id151 . -1) (undo-tree-id152 . -65) 6745 (t 23068 65060 689840 716000)) nil (23068 65073 518636 821000) 0 nil]) ((5436 . 5453)) nil (23068 65060 678976 28000) 0 nil]) ((5435 . 5436) (#("->" 0 2 (fontified t face font-lock-comment-face)) . -5435) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) 5437) nil (23068 65060 679011 280000) 0 nil]) ((5434 . 5437)) nil (23068 65060 679020 517000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5456)) nil (23068 65060 679024 763000) 0 nil]) ((#("(yas-reload-all)" 0 16 (fontified t)) . 5456) (undo-tree-id137 . -16) (undo-tree-id138 . -16) (undo-tree-id139 . -16) (undo-tree-id140 . 16) (undo-tree-id141 . -1) (undo-tree-id142 . 1) (undo-tree-id143 . -16) (undo-tree-id144 . -16) (t 23068 65022 529021 153000)) nil (23068 65060 679054 28000) 0 nil] [nil nil ((#("buffer" 0 6 (fontified t face font-lock-comment-face)) . -5308) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) 5314 (t 23068 65022 529021 153000)) ((5308 . 5314)) (23068 65026 351330 289000) 0 nil]) ((5297 . 5314)) nil (23068 65026 351512 489000) 0 nil]) ((5283 . 5297)) nil (23068 65022 512149 694000) 0 nil]) ((5262 . 5283) (t 23068 65002 774632 808000)) nil (23068 65022 512157 587000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5157) (t 23068 64993 923906 853000)) nil (23068 65002 760888 398000) 0 nil]) ((#("->" 0 2 (fontified t)) . 5005) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2)) nil (23068 64993 849155 229000) 0 nil] [nil nil ((5005 . 5006) (#("->" 0 2 (fontified t)) . -5005) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) 5007) ((5005 . 5007) (#("→" 0 1 (fontified t)) . 5005) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1)) (23068 64991 744758 14000) 0 nil]) ((5005 . 5007)) nil (23068 64991 745136 863000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4853) (#("
" 0 1 (fontified t)) . 4853) (undo-tree-id118 . -1) (undo-tree-id119 . -1)) nil (23068 64991 744789 40000) 0 nil]) ((#(";;;;;;;;;;Matlab Mode
(require 'matlab-load)
(setq matlab-indent-function-body t)  ; if you want function bodies indented
(setq matlab-verify-on-save-flag nil) ; turn off auto-verify on save
(defun my-matlab-mode-hook ()
  (setq fill-column 76))		; where auto-fill should wrap
(add-hook 'matlab-mode-hook 'my-matlab-mode-hook)
(defun my-matlab-shell-mode-hook ()
	'())
(add-hook 'matlab-shell-mode-hook 'my-matlab-shell-mode-hook)
" 0 10 (fontified t face font-lock-comment-delimiter-face) 10 22 (fontified t face font-lock-comment-face) 22 23 (fontified t) 23 30 (fontified t face font-lock-keyword-face) 30 32 (fontified t) 32 43 (fontified t face font-lock-constant-face) 43 57 (fontified t) 57 83 (fontified t) 83 122 (fontified t face font-lock-comment-face) 122 160 (fontified t) 160 175 (fontified t face font-lock-comment-face) 175 191 (fontified t face font-lock-comment-face) 191 192 (fontified t) 192 197 (fontified t face font-lock-keyword-face) 197 198 (fontified t) 198 217 (fontified t face font-lock-function-name-face) 217 218 (fontified t) 218 221 (fontified t) 221 247 (fontified t) 247 277 (fontified t face font-lock-comment-face) 277 328 (fontified t) 328 333 (fontified t face font-lock-keyword-face) 333 334 (fontified t) 334 359 (fontified t face font-lock-function-name-face) 359 386 (fontified t) 386 431 (fontified t)) . -4853) (undo-tree-id120 . -431) (undo-tree-id121 . -431) (undo-tree-id122 . -431) (undo-tree-id123 . -431) 5284 (t 23068 64979 191363 14000)) nil (23068 64991 744808 352000) 0 nil]) ((4825 . 4828) (t 23068 64976 930433 22000)) nil (23068 64979 177474 199000) 0 nil]) ((4821 . 4825)) nil (23068 64976 921572 946000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -4821) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -4822) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 4823) nil (23068 64976 921619 768000) 0 nil]) ((4817 . 4823)) nil (23068 64976 921630 425000) 0 nil]) ((4812 . 4817)) nil (23068 64976 921634 348000) 0 nil]) ((4791 . 4812)) nil (23068 64976 921638 83000) 0 nil]) ((4791 . 4792)) nil (23068 64976 921641 452000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4792) (undo-tree-id112 . -1)) nil (23068 64976 921647 664000) 0 nil]) ((#("(setenv \"OLD_HOME\" \"/mnt/HDD/linux/home/simon\" t)
(setenv \"OLD_ROOT\" \"/mnt/HDD/linux/root\" t)
(setenv \"W\" \"/mnt/3dfs/public\" t)
(setenv \"SWGROUP\" \"/mnt/3dfs/public/Groups/Software\" t)
(setenv \"WSIMON\" \"/mnt/3dfs/public/Groups/Software/Users/Simon\" t)
(setenv \"WMODELS\" \"/mnt/3dfs/public/3D/Images/STL-Files\" t)
(setenv \"WSLICES\" \"/mnt/3dfs/public/3D/Images/Samples\" t)
(setenv \"DROPBOX\" \"/home/simon/Dropbox\" t)
(setenv \"MARKETSDEV\" \"/mnt/3dfs/public/Markets\\ Development\" t)
(setenv \"PYTHONPATH\" \"/usr/local/lib/python2.7/site-packages:/usr/local/lib64/python2.7/site-packages\")
(setenv \"LD_LIBRARY_PATH\" \"$METALJET/BinLinux/:/usr/local/lib\" t)
(setenv \"PATH\" \"$PATH:/home/simon/scripts\" t)
" 0 8 (fontified t) 8 18 (fontified t face font-lock-string-face) 18 19 (fontified t) 19 43 (fontified t face font-lock-string-face) 43 46 (fontified t face font-lock-string-face) 46 50 (fontified t) 50 58 (fontified t) 58 68 (fontified t face font-lock-string-face) 68 69 (fontified t) 69 90 (fontified t face font-lock-string-face) 90 102 (fontified t) 102 105 (fontified t face font-lock-string-face) 105 106 (fontified t) 106 117 (fontified t face font-lock-string-face) 117 118 (fontified t face font-lock-string-face) 118 122 (fontified t face font-lock-string-face) 122 124 (fontified t face font-lock-string-face) 124 128 (fontified t) 128 136 (fontified t) 136 145 (fontified t face font-lock-string-face) 145 146 (fontified t) 146 179 (fontified t face font-lock-string-face) 179 180 (fontified t face font-lock-string-face) 180 184 (fontified t) 184 192 (fontified t) 192 200 (fontified t face font-lock-string-face) 200 201 (fontified t) 201 247 (fontified t face font-lock-string-face) 247 251 (fontified t) 251 259 (fontified t) 259 268 (fontified t face font-lock-string-face) 268 269 (fontified t) 269 307 (fontified t face font-lock-string-face) 307 319 (fontified t) 319 328 (fontified t face font-lock-string-face) 328 329 (fontified t) 329 334 (fontified t face font-lock-string-face) 334 335 (fontified t face font-lock-string-face) 335 365 (fontified t face font-lock-string-face) 365 369 (fontified t) 369 377 (fontified t) 377 381 (fontified t face font-lock-string-face) 381 386 (fontified t face font-lock-string-face) 386 387 (fontified t) 387 408 (fontified t face font-lock-string-face) 408 412 (fontified t) 412 420 (fontified t) 420 432 (fontified t face font-lock-string-face) 432 433 (fontified t) 433 472 (fontified t face font-lock-string-face) 472 477 (fontified t) 477 484 (fontified t) 484 496 (fontified t face font-lock-string-face) 496 497 (fontified t) 497 499 (fontified t face font-lock-string-face) 499 550 (fontified t face font-lock-string-face) 550 578 (face font-lock-string-face fontified t) 578 580 (fontified t) 580 588 (fontified t) 588 605 (fontified t face font-lock-string-face) 605 606 (fontified t) 606 628 (fontified t face font-lock-string-face) 628 642 (fontified t face font-lock-string-face) 642 646 (fontified t) 646 654 (fontified t) 654 660 (fontified t face font-lock-string-face) 660 661 (fontified t) 661 684 (fontified t face font-lock-string-face) 684 688 (fontified t face font-lock-string-face) 688 692 (fontified t)) . -4792) (undo-tree-id113 . -692) (undo-tree-id114 . -692) 5484 (t 23068 64951 994205 121000)) nil (23068 64976 921659 517000) 0 nil]) ((5485 . 5506)) nil (23068 64951 986422 420000) 0 nil]) ((5484 . 5485)) nil (23068 64951 986433 821000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4792) (#("
" 0 1 (fontified t)) . 4792) (undo-tree-id94 . -1) (undo-tree-id95 . -1)) nil (23068 64951 986460 455000) 0 nil]) ((#("`my-reload-env-vars()" 0 21 (fontified t)) . 4792) (undo-tree-id96 . -21) (undo-tree-id97 . -1) (undo-tree-id98 . -21) (undo-tree-id99 . -21) (undo-tree-id100 . -21) (undo-tree-id101 . 1) (undo-tree-id102 . -21) (undo-tree-id103 . 2) (undo-tree-id104 . -20) (undo-tree-id105 . -21) 4813 (t 23068 64943 628464 150000)) nil (23068 64951 986503 792000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4792)) nil (23068 64943 625986 652000) 0 nil]) ((#("(setenv \"PE_HOME\" \"/home/simon/git/MetalJet\")
;(setenv \"PE_HOME\" \"/home/simon/git/MetalJet2\")
;(setenv \"PE_HOME\" \"/home/simon/git/MetalJet3\")" 0 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 17 (fontified t face font-lock-string-face) 17 18 (fontified t) 18 44 (fontified t face font-lock-string-face) 44 46 (fontified t) 46 47 (fontified t face font-lock-comment-delimiter-face) 47 94 (fontified t face font-lock-comment-face) 94 95 (fontified t face font-lock-comment-delimiter-face) 95 125 (fontified t face font-lock-comment-face) 125 141 (fontified t face font-lock-comment-face)) . -4792) (undo-tree-id73 . -141) (undo-tree-id74 . -141) (undo-tree-id75 . -141) (undo-tree-id76 . -141) (undo-tree-id77 . 1) (undo-tree-id78 . -141) (undo-tree-id79 . 46) (undo-tree-id80 . -96) 4933) nil (23068 64943 626002 366000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4792) (#("
" 0 1 (fontified t)) . 4792)) nil (23068 64943 626005 279000) 0 nil]) ((#("(setenv \"XJETQTVERSION\" \"QT5\")" 0 8 (fontified t) 8 23 (fontified t face font-lock-string-face) 23 24 (fontified t) 24 29 (fontified t face font-lock-string-face) 29 30 (fontified t)) . -4792) (undo-tree-id81 . -30) (undo-tree-id82 . 1) (undo-tree-id83 . -30) (undo-tree-id84 . 30) (undo-tree-id85 . -1) (undo-tree-id86 . -9) (undo-tree-id87 . -30) 4822) nil (23068 64943 626011 90000) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 4767)) nil (23068 64943 626012 667000) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 4738)) nil (23068 64943 626014 85000) 0 nil]) ((#("(setenv \"QMAKE\" \"/mnt/HDD/linux/home/simon/Qt5.6/5.6/gcc_64/bin/qmake\")
(setenv \"QTDIR\" \"/mnt/HDD/linux/home/simon/Qt5.6/\")" 0 8 (fontified t) 8 15 (fontified t face font-lock-string-face) 15 16 (fontified t) 16 41 (fontified t face font-lock-string-face) 41 70 (fontified t face font-lock-string-face) 70 72 (fontified t) 72 80 (fontified t) 80 87 (fontified t face font-lock-string-face) 87 88 (fontified t) 88 122 (fontified t face font-lock-string-face) 122 123 (fontified t)) . -4793) (undo-tree-id88 . -123) (undo-tree-id89 . 1) (undo-tree-id90 . -123) (undo-tree-id91 . 51) (undo-tree-id92 . -73) (undo-tree-id93 . -123) 4916) nil (23068 64943 626021 396000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4732)) nil (23068 64943 626022 823000) 0 nil] [nil ([nil nil ((#("." 0 1 (fontified t face font-lock-comment-face)) . 4654)) ((4654 . 4655)) (23068 64919 522883 192000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-comment-face)) . 4656)) ((4656 . 4657)) (23068 64919 523189 62000) 0 nil]) ((4651 . 4658)) nil (23068 64919 707128 566000) 0 nil]) ((#("                                        " 0 40 (fontified t)) . -4616) (undo-tree-id66 . -40) (undo-tree-id67 . -40) 4656) nil (23068 64919 522933 443000) 0 nil]) ((4691 . 4693) (4616 . 4656) (4650 . 4651) (#("  " 0 2 (fontified t face font-lock-comment-face)) . 4650) (undo-tree-id68 . -2) (undo-tree-id69 . 2) (undo-tree-id70 . 2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) 4652) nil (23068 64919 522960 650000) 0 nil] [nil ([nil nil ((4653 . 4654)) ((#("z" 0 1 (fontified t)) . 4653) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1)) (23068 64907 251326 222000) 0 nil]) ((4654 . 4694) (#("  " 0 2 (fontified nil face font-lock-comment-face)) . 4653) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (4653 . 4655) (4653 . 4654)) ((#("
" 0 1 (fontified nil)) . 4653) (undo-tree-id63 . 1) (#("  " 0 2 (fontified nil face font-lock-comment-face)) . 4653) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (4653 . 4655) (#("                                        " 0 40 (fontified t)) . 4654)) (23068 64907 251569 0) 0 nil] [nil ([nil nil ((4693 . 4694)) ((#("z" 0 1 (fontified t)) . 4693) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1)) (23068 64904 816341 505000) 0 nil]) ((4616 . 4656) (4650 . 4651)) ((#("
" 0 1 (fontified nil face font-lock-comment-face)) . 4650) (undo-tree-id57 . 1) (#("                                        " 0 40 (fontified t)) . 4616)) (23068 64904 816395 9000) 0 nil] [nil nil ((4616 . 4656) (4650 . 4651)) ((#("
" 0 1 (fontified nil face font-lock-comment-face)) . 4650) (undo-tree-id53 . 1) (#("                                        " 0 40 (fontified t)) . 4616)) (23068 64902 987369 524000) 0 nil]) ((4639 . 4650)) nil (23068 64907 580009 346000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -4639) (undo-tree-id48 . -1) 4640) nil (23068 64902 987405 823000) 0 nil]) ((4636 . 4640)) nil (23068 64902 987412 505000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -4636) (undo-tree-id49 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -4637) (undo-tree-id50 . -1) 4638) nil (23068 64902 987424 986000) 0 nil]) ((4637 . 4638)) nil (23068 64902 987430 870000) 0 nil]) ((4616 . 4637)) nil (23068 64902 987434 381000) 0 nil]) ((4615 . 4618)) nil (23068 64902 987437 698000) 0 nil]) ((4616 . 4617)) nil (23068 64902 987440 791000) 0 nil]) ((#("  (setenv \"BE\" \"$PE_HOME/XjetApps/BuildEngine/BinLinux\" t)" 0 10 (fontified t) 10 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t) 15 35 (fontified t face font-lock-string-face) 35 54 (fontified t face font-lock-string-face) 54 55 (fontified t face font-lock-string-face) 55 58 (fontified t)) . 4686) (undo-tree-id51 . -58) (undo-tree-id52 . -58)) nil (23068 64902 987450 230000) 0 nil] [nil ([nil ([nil nil ((4618 . 4620)) ((#("zz" 0 2 (fontified t)) . 4618) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2)) (23068 64885 627639 101000) 0 nil]) ((4616 . 4618)) ((#("  " 0 2 (fontified t)) . 4616) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2)) (23068 64885 627741 922000) 0 nil]) ((#("  (setenv \"METALJET\" \"$PE_HOME/XjetApps/MetalJet/Apps/Project/qt/\" t)
  (setenv \"BE\" \"$PE_HOME/XjetApps/BuildEngine/BinLinux\" t)" 0 10 (fontified t) 10 20 (fontified t face font-lock-string-face) 20 21 (fontified t) 21 66 (fontified t face font-lock-string-face) 66 80 (fontified t) 80 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t) 85 105 (fontified t face font-lock-string-face) 105 124 (fontified t face font-lock-string-face) 124 125 (fontified t face font-lock-string-face) 125 128 (fontified t)) . -4616) (undo-tree-id26 . -128) (undo-tree-id27 . -128) (undo-tree-id28 . -128) (undo-tree-id29 . -128) (undo-tree-id30 . 1) (undo-tree-id31 . -128) (undo-tree-id32 . 56) (undo-tree-id33 . -73) 4744) ((4616 . 4744)) (23068 64885 884088 975000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . -4586) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) 4587) nil (23068 64886 188314 339000) 0 nil]) ((#("for MetalJet compilation" 0 24 (fontified t face font-lock-comment-face)) . -4587) (undo-tree-id38 . -24) (undo-tree-id39 . -24) (undo-tree-id40 . -24) (undo-tree-id41 . -24) 4611 (t 23068 64822 707208 231000)) nil (23068 64885 627668 710000) 0 nil] [nil ([nil nil ((#("
" 0 1 (fontified t)) . 4612)) ((4612 . 4613)) (23068 64866 524128 337000) 0 nil]) ((#("(defun my-reload-env-vars ()
  (setenv \"METALJET\" \"$PE_HOME/XjetApps/MetalJet/Apps/Project/qt/\" t)
  (setenv \"BE\" \"$PE_HOME/XjetApps/BuildEngine/BinLinux\" t)
  )


;(setenv \"QMAKE\" \"qmake-qt5\")
;(setenv \"QTDIR\" \"/usr\")
(setenv \"QMAKE\" \"/mnt/HDD/linux/home/simon/Qt5.6/5.6/gcc_64/bin/qmake\")
(setenv \"QTDIR\" \"/mnt/HDD/linux/home/simon/Qt5.6/\")
(setenv \"XJETQTVERSION\" \"QT5\")
" 0 1 (fontified t) 1 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 25 (fontified t face font-lock-function-name-face) 25 39 (fontified t) 39 49 (fontified t face font-lock-string-face) 49 50 (fontified t) 50 95 (fontified t face font-lock-string-face) 95 109 (fontified t) 109 112 (fontified t face font-lock-string-face) 112 113 (fontified t face font-lock-string-face) 113 114 (fontified t) 114 134 (fontified t face font-lock-string-face) 134 153 (fontified t face font-lock-string-face) 153 154 (fontified t face font-lock-string-face) 154 158 (fontified t) 158 164 (fontified t) 164 165 (fontified t face font-lock-comment-delimiter-face) 165 194 (fontified t face font-lock-comment-face) 194 195 (fontified t face font-lock-comment-delimiter-face) 195 199 (fontified t face font-lock-comment-face) 199 219 (fontified t face font-lock-comment-face) 219 227 (fontified t) 227 234 (fontified t face font-lock-string-face) 234 235 (fontified t) 235 260 (fontified t face font-lock-string-face) 260 289 (fontified t face font-lock-string-face) 289 291 (fontified t) 291 299 (fontified t) 299 306 (fontified t face font-lock-string-face) 306 307 (fontified t) 307 341 (fontified t face font-lock-string-face) 341 351 (fontified t) 351 366 (fontified t face font-lock-string-face) 366 367 (fontified t) 367 372 (fontified t face font-lock-string-face) 372 374 (fontified t)) . 4612) (undo-tree-id23 . -374) (undo-tree-id25 . -374) (t 23068 64822 707208 231000)) ((4612 . 4986)) (23068 64866 524205 139000) 0 nil]) ((4254 . 4264)) nil (23068 64866 789404 345000) 0 nil]) ((4253 . 4254)) nil (23068 64822 694329 79000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4425)) nil (23068 64822 694337 802000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4302) (t 23068 64792 643139 104000)) nil (23068 64822 694345 62000) 0 nil]) ((4234 . 4236)) nil (23068 64792 623402 806000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -4234) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("z" 0 1 (fontified t face font-lock-comment-face)) . -4235) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 4236) nil (23068 64792 623455 47000) 0 nil]) ((4231 . 4236)) nil (23068 64792 623466 179000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -4231) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -4232) (undo-tree-id7 . -1) 4233) nil (23068 64792 623478 184000) 0 nil]) ((4219 . 4233)) nil (23068 64792 623484 370000) 0 nil]) ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -4219) (undo-tree-id8 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -4220) (undo-tree-id9 . -1) 4221) nil (23068 64792 623494 931000) 0 nil]) ((4204 . 4221)) nil (23068 64792 623500 478000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -4204) (undo-tree-id10 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -4205) (undo-tree-id11 . -1) 4206) nil (23068 64792 623511 615000) 0 nil]) ((4192 . 4206)) nil (23068 64792 623516 982000) 0 nil]) ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -4192) (undo-tree-id12 . -1) 4193) nil (23068 64792 623524 106000) 0 nil]) ((4180 . 4193)) nil (23068 64792 623528 699000) 0 nil]) ((#("(add-to-list 'load-path (concat emacs-git \"Plugins/matlab-emacs/matlab-emacs\"))" 0 42 (fontified t) 42 77 (fontified t face font-lock-string-face) 77 79 (fontified t)) . -4158) (undo-tree-id13 . -79) (undo-tree-id14 . 1) (undo-tree-id15 . -79) (undo-tree-id16 . 79) (undo-tree-id17 . -1) (undo-tree-id18 . -79) 4237 (t 23060 30807 183217 242000)) nil (23068 64792 623550 221000) 0 nil]) nil nil (23068 64792 623556 182000) 0 nil] #1# 9952 197 nil]