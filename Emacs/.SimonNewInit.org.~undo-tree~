"389754b5e86b08220feb92d6f0fe327f578ed9ff"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#13=[nil nil ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 19174) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1) (undo-tree-id56 . 1)) nil (23429 52627 564925 288000) 0 nil]) ((19173 . 19174)) nil (23429 52627 564969 321000) 0 nil]) ((#("
" 0 1 (fontified t face org-block-end-line)) . -19187) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) 19188) nil (23429 52627 565349 417000) 0 nil]) ((#("*** htmlize
    #+BEGIN_SRC emacs-lisp
;    (require 'htmlize)
    #+END_SRC" 0 2 (fontified t face (:foreground #4="#2c2c2c") keymap #1=(keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle)))) 2 3 (fontified t composition (1 1 #5=[8226]) keymap #1# face org-level-3) 3 4 (fontified t keymap #1# face org-level-3) 4 11 (fontified t face org-level-3) 11 12 (fontified t) 12 38 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 38 39 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 39 44 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #2=(org-block))) 44 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3=(font-lock-comment-face . #2#)) 62 63 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 63 76 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line)) . -19188) (undo-tree-id98 . -63) (undo-tree-id99 . -63) (undo-tree-id100 . -39) (undo-tree-id101 . -39) (undo-tree-id102 . -12) (undo-tree-id103 . -12) (undo-tree-id104 . -76) (undo-tree-id105 . 76) (undo-tree-id106 . 76) (undo-tree-id107 . -76) (undo-tree-id108 . -76) (undo-tree-id109 . 76) (undo-tree-id110 . 76) (undo-tree-id111 . 76) (undo-tree-id112 . 76) (undo-tree-id113 . 76) (undo-tree-id114 . 76) (undo-tree-id115 . 76) (undo-tree-id116 . 76) (undo-tree-id117 . 76) (undo-tree-id118 . 76) (undo-tree-id119 . 76) (undo-tree-id120 . 76) (undo-tree-id121 . 76) (undo-tree-id122 . 76) (undo-tree-id123 . 76) (undo-tree-id124 . 76) (undo-tree-id125 . -76) (undo-tree-id126 . 64) (undo-tree-id127 . 76) (undo-tree-id128 . -12) (undo-tree-id129 . 37) (undo-tree-id130 . 64) (undo-tree-id131 . -39) (undo-tree-id132 . 13) (undo-tree-id133 . 37) (undo-tree-id134 . -63) (undo-tree-id135 . 13) (undo-tree-id136 . -76) 19264) nil (23429 52627 565791 323000) 0 nil]) ((#("*** ox-slidy
    #+BEGIN_SRC emacs-lisp
    (require 'ox-slidy)
    #+END_SRC
" 0 2 (fontified t face (:foreground #4#) keymap #1#) 2 3 (fontified t composition (1 1 #5#) keymap #1# face org-level-3) 3 4 (fontified t keymap #1# face org-level-3) 4 12 (fontified t face org-level-3) 12 13 (fontified t) 13 39 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 39 40 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 40 45 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6=(org-block)) 45 52 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #6#)) 52 54 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 54 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-constant-face . #6#)) 62 63 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #6#) 63 64 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #6#) 64 77 (fontified t font-lock-fontified t font-lock-multiline t face org-block-end-line) 77 78 (fontified t face org-block-end-line)) . -19188) (undo-tree-id137 . -78) (undo-tree-id138 . -78) (undo-tree-id139 . -64) (undo-tree-id140 . -64) (undo-tree-id141 . -40) (undo-tree-id142 . -40) (undo-tree-id143 . -13) (undo-tree-id144 . -13) (undo-tree-id145 . -78) (undo-tree-id146 . -4) (undo-tree-id147 . 78) (undo-tree-id148 . 78) (undo-tree-id149 . -54) (undo-tree-id150 . 78) (undo-tree-id151 . 78) (undo-tree-id152 . -78) (undo-tree-id153 . 65) (undo-tree-id154 . 78) (undo-tree-id155 . -13) (undo-tree-id156 . 38) (undo-tree-id157 . 65) (undo-tree-id158 . -40) (undo-tree-id159 . 14) (undo-tree-id160 . 38) (undo-tree-id161 . -64) (undo-tree-id162 . 14) (undo-tree-id163 . -78) 19266 (t 23429 51439 520450 567000)) nil (23429 52627 566112 929000) 0 nil] [nil nil ((1 . 2) (t 23429 42755 110603 51000)) ((#("x" 0 1 (fontified t)) . 1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (t 23429 51421 133986 965000)) (23429 51108 354240 962000) 0 nil]) ((882 . 893)) ((#(" and titles" 0 11 (fontified t face org-level-2)) . 882) (t 23429 51439 520450 567000)) (23429 52404 843416 653000) 0 nil]) ((#("
" 0 1 (fontified t)) . 136) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . 1) (undo-tree-id28 . 1) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1) (undo-tree-id33 . 1)) nil (23429 52404 508506 897000) 0 nil]) ((#("** Something not working in [[ox-slidy]] and [[ox-latex]] → fix it" 0 1 (fontified t face (:foreground #4#) keymap #1#) 1 2 (fontified t composition (1 1 #5#) keymap #1# face org-level-2) 2 3 (fontified t keymap #1# face org-level-2) 3 28 (fontified t face org-level-2) 28 29 (help-echo #9="LINK: ox-slidy" htmlize-link #8=(:uri "ox-slidy") fontified t face org-link invisible org-link mouse-face highlight keymap #7=(keymap (follow-link . mouse-face) (mouse-3 . org-find-file-at-mouse) (mouse-2 . org-open-at-mouse)) font-lock-multiline t) 29 30 (help-echo #9# htmlize-link #8# rear-nonsticky #10=(mouse-face highlight keymap invisible intangible help-echo org-linked-text htmlize-link) fontified t face org-link invisible org-link mouse-face highlight keymap #7# font-lock-multiline t) 30 37 (help-echo #9# htmlize-link #8# fontified t face org-link mouse-face highlight keymap #7# font-lock-multiline t) 37 38 (help-echo #9# htmlize-link #8# rear-nonsticky #10# fontified t face org-link mouse-face highlight keymap #7# font-lock-multiline t) 38 39 (help-echo #9# htmlize-link #8# fontified t face org-link invisible org-link mouse-face highlight keymap #7# font-lock-multiline t) 39 40 (rear-nonsticky #10# help-echo #9# htmlize-link #8# fontified t face org-link invisible org-link mouse-face highlight keymap #7# font-lock-multiline t) 40 45 (fontified t face org-level-2) 45 46 (help-echo #12="LINK: ox-latex" htmlize-link #11=(:uri "ox-latex") fontified t face org-link invisible org-link mouse-face highlight keymap #7# font-lock-multiline t) 46 47 (help-echo #12# htmlize-link #11# rear-nonsticky #10# fontified t face org-link invisible org-link mouse-face highlight keymap #7# font-lock-multiline t) 47 54 (help-echo #12# htmlize-link #11# fontified t face org-link mouse-face highlight keymap #7# font-lock-multiline t) 54 55 (help-echo #12# htmlize-link #11# rear-nonsticky #10# fontified t face org-link mouse-face highlight keymap #7# font-lock-multiline t) 55 56 (help-echo #12# htmlize-link #11# fontified t face org-link invisible org-link mouse-face highlight keymap #7# font-lock-multiline t) 56 57 (rear-nonsticky #10# help-echo #12# htmlize-link #11# fontified t face org-link invisible org-link mouse-face highlight keymap #7# font-lock-multiline t) 57 66 (fontified t face org-level-2)) . -136) (undo-tree-id34 . 12) (undo-tree-id35 . 12) (undo-tree-id36 . -54) (undo-tree-id37 . -66) (undo-tree-id38 . -66) (undo-tree-id39 . -66) (undo-tree-id40 . 66) (undo-tree-id41 . 66) (undo-tree-id42 . 66) (undo-tree-id43 . -66) (undo-tree-id44 . 66) (undo-tree-id45 . -66) 202 (t 23429 42729 161363 245000)) nil (23429 42741 479144 118000) 0 nil]) ((#("  C-M-p → python mode
  C-M-t → text mode
  C-M-c → c++ mode
" 0 61 (fontified t)) . -37579) (undo-tree-id0 . -61) (undo-tree-id1 . -61) (undo-tree-id2 . -42) (undo-tree-id3 . -42) (undo-tree-id4 . -22) (undo-tree-id5 . -22) (undo-tree-id6 . -61) (undo-tree-id7 . 59) (undo-tree-id8 . -2) (undo-tree-id9 . 61) (undo-tree-id10 . 59) (undo-tree-id11 . 61) (undo-tree-id12 . 61) (undo-tree-id13 . -61) (undo-tree-id14 . 39) (undo-tree-id15 . 61) (undo-tree-id16 . -22) (undo-tree-id17 . 19) (undo-tree-id18 . 39) (undo-tree-id19 . -42) (undo-tree-id20 . 19) (undo-tree-id21 . -61) 37640 (t 23429 42424 615285 47000)) nil (23429 42729 124449 898000) 0 nil]) nil nil (23429 42729 124466 766000) 0 nil] #13# 1800 10 nil)