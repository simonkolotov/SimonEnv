"e571610729523dd7265554624afbf8b7a0c5b958"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#17=[nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((18015 . 18031) (t 23422 12048 106522 696000)) ((#("(require 'gtags)" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #1=(org-block)) 1 8 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-keyword-face . #1#)) 8 10 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #1#) 10 15 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-constant-face . #1#)) 15 16 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #1#)) . 18015) (undo-tree-id246 . -16) (undo-tree-id247 . -16) (undo-tree-id248 . -16) (undo-tree-id249 . -16) (undo-tree-id250 . -16) (undo-tree-id251 . 1) (undo-tree-id252 . -16) (undo-tree-id253 . 16) (undo-tree-id254 . -1) (undo-tree-id255 . -16) (t 23422 12430 45265 113000)) (23422 12430 23326 964000) 0 nil]) ((18001 . 18010)) ((#(" 'ggtags)" 0 2 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #2=(org-block)) 2 8 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (font-lock-constant-face . #2#)) 8 9 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #2#)) . 18001) (undo-tree-id256 . -9) (undo-tree-id257 . -9) (undo-tree-id258 . -9) (undo-tree-id259 . -9)) (23422 12478 168916 53000) 0 nil]) ((17993 . 17994)) ((#("(" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 17993)) (23422 12478 454113 876000) 0 nil]) ((17993 . 18000)) ((#("require" 0 7 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 17993) (undo-tree-id260 . -7) (undo-tree-id261 . -7) (undo-tree-id262 . -7) (undo-tree-id263 . -7) (undo-tree-id264 . -7) (undo-tree-id265 . 7)) (23422 12478 725700 87000) 0 nil]) ((17988 . 17993)) ((#("
    " 0 1 (fontified t font-lock-fontified t help-echo nil font-lock-multiline t face org-block-begin-line) 1 5 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 17988) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -5) (undo-tree-id272 . -5) (undo-tree-id273 . -5)) (23422 12478 981766 867000) 0 nil]) ((#("+BEGIN_SRC " 0 11 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -17967) (17978 . 17999) 17978) ((#("+BEGIN_SRC emacs-lisp" 0 21 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 17978) (undo-tree-id274 . -21) (undo-tree-id275 . -21) (undo-tree-id276 . -21) (undo-tree-id277 . -21) (undo-tree-id278 . -21) (undo-tree-id279 . -21) (undo-tree-id280 . -21) (undo-tree-id281 . -21) (undo-tree-id282 . -21) (undo-tree-id283 . -21) (17967 . 17978)) (23422 12479 230495 901000) 0 nil]) ((#("?" 0 1 (fontified nil)) . 17978) (undo-tree-id238 . -1) (17966 . 17998) (#("<s" 0 2 (fontified t font-lock-fontified t)) . -17966) (undo-tree-id239 . -2) (undo-tree-id241 . -1) (undo-tree-id243 . -2) (undo-tree-id245 . -2) 17968) ((17966 . 17968) (#("#+BEGIN_SRC ?
    
    #+END_SRC" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1 12 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 12 13 (fontified nil) 13 14 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t face org-block-begin-line) 14 18 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #3=(:inherit #15=(org-block))) 18 19 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face #3#) 19 23 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-end-line) 23 32 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-end-line)) . 17966) (undo-tree-id284 . -12) (undo-tree-id285 . -12) (undo-tree-id286 . 19) (undo-tree-id287 . 19) (undo-tree-id288 . 19) (undo-tree-id289 . 19) (undo-tree-id290 . -12) (undo-tree-id291 . 14) (undo-tree-id292 . 14) (undo-tree-id293 . 14) (undo-tree-id294 . 14) (undo-tree-id295 . 14) (undo-tree-id296 . 14) (undo-tree-id297 . -32) (undo-tree-id298 . -32) (undo-tree-id299 . -18) (undo-tree-id300 . -12) (undo-tree-id301 . 14) (undo-tree-id302 . 14) (undo-tree-id303 . 14) (undo-tree-id304 . 14) (undo-tree-id305 . 14) (undo-tree-id306 . 14) (undo-tree-id307 . 14) (undo-tree-id308 . 14) (undo-tree-id309 . 14) (undo-tree-id310 . 14) (undo-tree-id311 . -18) (undo-tree-id312 . 14) (undo-tree-id313 . 14) (undo-tree-id314 . -18) (undo-tree-id315 . 14) (undo-tree-id316 . 14) (undo-tree-id317 . -18) (undo-tree-id318 . 19) (undo-tree-id319 . 14) (undo-tree-id320 . -12) (undo-tree-id321 . 19) (undo-tree-id322 . 19) (undo-tree-id323 . -12) (undo-tree-id324 . 19) (undo-tree-id325 . 19) (undo-tree-id326 . -12) (undo-tree-id327 . 19) (undo-tree-id328 . 19) (undo-tree-id329 . -12) (undo-tree-id330 . 19) (undo-tree-id331 . 19) (undo-tree-id332 . -12) (17978 . 17979)) (23422 12479 454037 62000) 0 nil]) ((17966 . 17968)) ((#("<s" 0 2 (fontified t font-lock-fontified t)) . 17966) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2)) (23422 12479 671615 481000) 0 nil]) ((17962 . 17966)) ((#("    " 0 4 (fontified t font-lock-fontified t)) . 17962) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4)) (23422 12479 885699 37000) 0 nil]) ((17961 . 17962) (t 23422 12032 69995 230000)) ((#("
" 0 1 (fontified t font-lock-fontified t)) . 17961) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1)) (23422 12480 109789 739000) 0 nil]) ((17960 . 17961)) ((#("s" 0 1 (fontified t font-lock-fontified t face org-level-3)) . 17960) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1)) (23422 12480 350642 37000) 0 nil]) ((17953 . 17960)) ((#("a?) tag" 0 7 (fontified t font-lock-fontified t face org-level-3)) . 17953) (undo-tree-id391 . -7) (undo-tree-id392 . -7) (undo-tree-id393 . -7) (undo-tree-id394 . -7) (undo-tree-id395 . -7) (undo-tree-id396 . -7) (undo-tree-id397 . -7) (undo-tree-id398 . -7) (undo-tree-id399 . -7) (undo-tree-id400 . -7) (undo-tree-id401 . -7) (undo-tree-id402 . -7) (undo-tree-id403 . -7) (undo-tree-id404 . -7) (undo-tree-id405 . -7) (undo-tree-id406 . -7) (undo-tree-id407 . -7) (undo-tree-id408 . -7) (undo-tree-id409 . -7) (undo-tree-id410 . -7)) (23422 12480 605866 271000) 0 nil]) ((17932 . 17953)) ((#("gs for c/c++ (and jav" 0 21 (fontified t font-lock-fontified t face org-level-3)) . 17932) (undo-tree-id411 . -21) (undo-tree-id412 . -21) (undo-tree-id413 . -21) (undo-tree-id414 . -21) (undo-tree-id415 . -21) (undo-tree-id416 . -21) (undo-tree-id417 . -21) (undo-tree-id418 . -21) (undo-tree-id419 . -21) (undo-tree-id420 . -21) (undo-tree-id421 . -21) (undo-tree-id422 . -21) (undo-tree-id423 . -21) (undo-tree-id424 . -21) (undo-tree-id425 . -21) (undo-tree-id426 . -21) (undo-tree-id427 . -21) (undo-tree-id428 . -21) (undo-tree-id429 . -21) (undo-tree-id430 . -21) (undo-tree-id431 . -21)) (23422 12480 877916 737000) 0 nil]) ((#("h" 0 1 (fontified t font-lock-fontified t face org-level-3)) . -17932) (undo-tree-id235 . -1) (#("s" 0 1 (fontified t font-lock-fontified t face org-level-3)) . -17933) (undo-tree-id236 . -1) 17934) ((17932 . 17934)) (23422 12481 109874 797000) 0 nil]) ((17924 . 17934)) ((#("*** ggtahs" 0 2 (fontified t font-lock-fontified t face (:foreground "#2c2c2c") keymap #4=(keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle)))) 2 3 (fontified t font-lock-fontified t composition (1 1 [8226]) keymap #4# face org-level-3) 3 4 (fontified t font-lock-fontified t keymap #4# face org-level-3) 4 8 (fontified t font-lock-fontified t face org-level-3) 8 9 (fontified t font-lock-fontified t face org-level-3) 9 10 (fontified t font-lock-fontified t face org-level-3)) . 17924) (undo-tree-id432 . -8) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) (undo-tree-id436 . -10) (undo-tree-id437 . -8) (undo-tree-id438 . -8) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (undo-tree-id442 . -8) (undo-tree-id443 . -8) (undo-tree-id444 . -8) (undo-tree-id445 . -8) (undo-tree-id446 . -8) (undo-tree-id447 . -8) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -8) (undo-tree-id451 . -8) (undo-tree-id452 . -10) (undo-tree-id453 . -10) (undo-tree-id454 . -10)) (23422 12481 317816 92000) 0 nil]) ((17923 . 17924) (t 23422 11897 275967 51000)) ((#("
" 0 1 (fontified t font-lock-fontified t face org-block-end-line)) . 17923) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1)) (23422 12481 549821 644000) 0 nil]) ((36794 . 37370) (#("     (global-set-key (kbd \"C-M-C\") 'c++-mode)

     (global-set-key (kbd \"C-M-{\") 'c-beginning-of-defun) ; something like matching function
     (global-set-key (kbd \"C-M-}\") 'c-end-of-defun)

     ;;switch between header and src files
     (add-hook 'c-mode-common-hook
     (lambda()
     (local-set-key  (kbd \"C-c h\") 'ff-find-other-file)))


     (add-hook 'c-mode-common-hook
                    (lambda ()
                      (when (derived-mode-p 'c-mode 'c++-mode 'java-mode)
                                (ggtags-mode 1))))

" 0 26 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5=(org-block)) 26 33 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #5#)) 33 73 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 73 80 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #5#)) 80 105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 105 107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #5#)) 107 140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #5#)) 140 166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 166 173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #5#)) 173 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 198 200 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #5#)) 200 236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #5#)) 236 277 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 277 283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 283 312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 312 319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #5#)) 319 402 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 402 408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 408 435 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 435 439 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 439 500 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #5#) 500 537 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #5#) 537 538 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #5#)) . 36794) (undo-tree-id210 . -345) (undo-tree-id211 . -345) (undo-tree-id212 . 193) (undo-tree-id214 . 193) (undo-tree-id216 . 193) (undo-tree-id218 . 193) (undo-tree-id220 . 193) (undo-tree-id222 . 193) (undo-tree-id224 . 193) (undo-tree-id226 . 193) 37139) ((36794 . 37332) (#("     (global-set-key (kbd \"C-M-C\") 'c++-mode)

     (global-set-key (kbd \"C-M-{\") 'c-beginning-of-defun) ; something like matching function
     (global-set-key (kbd \"C-M-}\") 'c-end-of-defun)

     ;;switch between header and src files
     (add-hook 'c-mode-common-hook
     (lambda()
     (local-set-key  (kbd \"C-c h\") 'ff-find-other-file)))

     ;; enable gg-tags for tags in c++
     (add-hook 'c-mode-common-hook
                    (lambda ()
                      (when (derived-mode-p 'c-mode 'c++-mode 'java-mode)
                                (ggtags-mode 1))))

" 0 26 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6=(org-block)) 26 33 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #6#)) 33 73 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 73 80 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #6#)) 80 105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 105 107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #6#)) 107 140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #6#)) 140 166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 166 173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #6#)) 173 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 198 200 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #6#)) 200 236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #6#)) 236 277 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 277 283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #6#)) 283 312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 312 319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #6#)) 319 350 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 350 353 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #6#)) 353 384 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #6#)) 384 440 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 440 446 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #6#)) 446 473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #6#) 473 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #7=(font-lock-keyword-face . #6#)) 474 477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #7#) 477 575 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #6#) 575 576 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #6#)) . 36794) (undo-tree-id479 . 576) (undo-tree-id480 . 576) (undo-tree-id481 . 193) (undo-tree-id482 . 193) (undo-tree-id483 . 193) (undo-tree-id484 . -344) (undo-tree-id485 . -344) (undo-tree-id486 . -383) (undo-tree-id487 . -383) (undo-tree-id488 . -418) (undo-tree-id489 . -418) (undo-tree-id490 . -449) (undo-tree-id491 . -449) (undo-tree-id492 . -523) (undo-tree-id493 . -523) (undo-tree-id494 . -574) (undo-tree-id495 . -574) (undo-tree-id496 . -575) (undo-tree-id497 . -575)) (23422 12481 782613 558000) 0 nil]) ((36794 . 37332) (#("     (global-set-key (kbd \"C-M-C\") 'c++-mode)

     (global-set-key (kbd \"C-M-{\") 'c-beginning-of-defun) ; something like matching function
     (global-set-key (kbd \"C-M-}\") 'c-end-of-defun)

     ;;switch between header and src files
     (add-hook 'c-mode-common-hook
     (lambda()
     (local-set-key  (kbd \"C-c h\") 'ff-find-other-file)))


     (add-hook 'c-mode-common-hook
	    (lambda ()
	      (when (derived-mode-p 'c-mode 'c++-mode 'java-mode)
		(ggtags-mode 1))))
  
" 0 26 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8=(org-block)) 26 33 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #8#)) 33 73 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 73 80 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #8#)) 80 105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 105 106 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #9=(font-lock-comment-delimiter-face . #8#)) 106 107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #9#) 107 140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #8#)) 140 166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 166 173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #8#)) 173 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 198 200 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #8#)) 200 236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #8#)) 236 241 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 241 277 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 277 283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 283 312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 312 319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #8#)) 319 351 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #8#) 351 387 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 387 393 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 393 405 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 405 409 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 409 474 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #8#) 474 475 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #8#) 475 479 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #8#) 479 480 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #8#)) . 36794) (undo-tree-id227 . -351) (undo-tree-id228 . -346) (undo-tree-id229 . -345) (undo-tree-id230 . -351) (undo-tree-id231 . -351) 37139) ((36794 . 37274) (#("     (global-set-key (kbd \"C-M-C\") 'c++-mode)

     (global-set-key (kbd \"C-M-{\") 'c-beginning-of-defun) ; something like matching function
     (global-set-key (kbd \"C-M-}\") 'c-end-of-defun)

     ;;switch between header and src files
     (add-hook 'c-mode-common-hook
     (lambda()
     (local-set-key  (kbd \"C-c h\") 'ff-find-other-file)))


     (add-hook 'c-mode-common-hook
                    (lambda ()
                      (when (derived-mode-p 'c-mode 'c++-mode 'java-mode)
                                (ggtags-mode 1))))

" 0 26 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10=(org-block)) 26 33 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #10#)) 33 73 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 73 80 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #10#)) 80 105 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 105 107 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #10#)) 107 140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #10#)) 140 166 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 166 173 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #10#)) 173 198 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 198 200 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #10#)) 200 236 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #10#)) 236 277 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 277 283 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #10#)) 283 312 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 312 319 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #10#)) 319 402 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 402 408 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #10#)) 408 435 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 435 439 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #10#)) 439 474 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #10#) 474 500 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #10#) 500 537 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #10#) 537 538 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #10#)) . 36794) (undo-tree-id498 . 193) (undo-tree-id499 . -345) (undo-tree-id500 . 193) (undo-tree-id501 . -345) (undo-tree-id502 . -345)) (23422 12482 96388 788000) 0 nil]) ((37138 . 37139)) ((#("
" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 37138) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1)) (23422 12482 545762 911000) 0 nil]) ((#(")" 0 1 (fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) src-block t)) . -37272) (undo-tree-id232 . -1) (undo-tree-id233 . 1) (undo-tree-id234 . -1) 37273) ((37272 . 37273)) (23422 12482 873741 58000) 0 nil]) ((nil rear-nonsticky nil 37272 . 37273) (nil fontified nil 37144 . 37273) (37144 . 37273)) ((#("(add-hook 'c-mode-common-hook
	    (lambda ()
	      (when (derived-mode-p 'c-mode 'c++-mode 'java-mode)
		(ggtags-mode 1))))
  )" 0 36 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #11=(org-block)) 36 42 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #11#)) 42 54 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #11#) 54 58 (fontified nil font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #11#)) 58 123 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face #11#) 123 124 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face #11#) 124 128 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face #11#) 128 129 (fontified nil rear-nonsticky nil font-lock-fontified t src-block t font-lock-multiline t face #11#)) . 37144) (undo-tree-id507 . -129) (undo-tree-id508 . 1) (undo-tree-id509 . -129) (undo-tree-id510 . -129) (undo-tree-id511 . -129) (undo-tree-id512 . -129) (nil rear-nonsticky t 37272 . 37273)) (23422 12483 237934 628000) 0 nil] [nil nil ((nil rear-nonsticky nil 37272 . 37273) (nil fontified nil 37144 . 37273) (37144 . 37273)) ((#("(add-hook 'c-mode-common-hook
	    (lambda ()
	      (when (derived-mode-p 'c-mode 'c++-mode 'java-mode)
		(ggtags-mode 1))))
  )" 0 36 (fontified nil font-lock-fontified t font-lock-multiline t face #12=(org-block) help-echo nil src-block t) 36 42 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #12#) help-echo nil src-block t) 42 54 (fontified nil font-lock-fontified t font-lock-multiline t face #12# help-echo nil src-block t) 54 58 (fontified nil font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #12#) help-echo nil src-block t) 58 128 (fontified nil font-lock-fontified t font-lock-multiline t face #12# src-block t) 128 129 (fontified nil rear-nonsticky nil font-lock-fontified t font-lock-multiline t face #12# src-block t)) . 37144) (undo-tree-id174 . 129) (undo-tree-id175 . -129) (undo-tree-id176 . 23) (undo-tree-id177 . -106) (undo-tree-id178 . 82) (undo-tree-id179 . 23) (undo-tree-id180 . -47) (undo-tree-id181 . 98) (undo-tree-id182 . 82) (undo-tree-id183 . -31) (undo-tree-id184 . 98) (undo-tree-id185 . 129) (undo-tree-id186 . 98) (undo-tree-id187 . 129) (undo-tree-id188 . -31) (undo-tree-id189 . 82) (undo-tree-id190 . 98) (undo-tree-id191 . -47) (undo-tree-id192 . 23) (undo-tree-id193 . 82) (undo-tree-id194 . -106) (undo-tree-id195 . 23) (undo-tree-id196 . -129) (undo-tree-id197 . 23) (undo-tree-id198 . -106) (undo-tree-id199 . 82) (undo-tree-id200 . 23) (undo-tree-id201 . -47) (undo-tree-id202 . 98) (undo-tree-id203 . 82) (undo-tree-id204 . -31) (undo-tree-id205 . 129) (undo-tree-id206 . 98) (undo-tree-id207 . 129) (undo-tree-id208 . -129) (undo-tree-id209 . -129) (nil rear-nonsticky t 37272 . 37273)) (23422 11871 887239 121000) 0 nil] [nil nil ((nil rear-nonsticky nil 37285 . 37286) (nil fontified nil 37157 . 37286) (37157 . 37286) 37144) ((#("(add-hook 'c-mode-common-hook
	    (lambda ()
	      (when (derived-mode-p 'c-mode 'c++-mode 'java-mode)
		(ggtags-mode 1))))
  )" 0 29 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-end-line) 29 30 (fontified nil face org-block-end-line) 30 126 (fontified nil) 126 128 (fontified nil) 128 129 (fontified nil rear-nonsticky nil)) . 37157) (undo-tree-id168 . -129) (undo-tree-id169 . 1) (undo-tree-id170 . -129) (undo-tree-id171 . -129) (undo-tree-id172 . -129) (undo-tree-id173 . -129) (nil fontified t 37187 . 37283) (nil fontified t 37186 . 37187) (nil fontified t 37157 . 37186) (nil rear-nonsticky t 37285 . 37286)) (23422 11858 423611 998000) 0 nil] [nil nil ((nil rear-nonsticky nil 37147 . 37148) (nil fontified nil 37144 . 37148) (37144 . 37148)) ((#("SRC " 0 3 (font-lock-fontified t fontified nil font-lock-multiline t face #13=(org-block) src-block t) 3 4 (font-lock-fontified t fontified nil rear-nonsticky nil font-lock-multiline t face #13# src-block t)) . 37144) (undo-tree-id163 . -4) (undo-tree-id164 . 4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (nil rear-nonsticky t 37147 . 37148)) (23422 11855 63700 525000) 0 nil]) ((37139 . 37144)) ((#("     " 0 5 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face (org-block))) . 37139) (undo-tree-id513 . -5) (undo-tree-id514 . -5) (undo-tree-id515 . -5) (undo-tree-id516 . -5) (undo-tree-id517 . -5) (undo-tree-id518 . -5) (undo-tree-id519 . -5)) (23422 12483 535417 285000) 0 nil]) ((37137 . 37139)) ((#("

" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #14=(org-block)) 1 2 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #14#)) . 37137) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . 1) (undo-tree-id524 . 1) (undo-tree-id525 . -1) (undo-tree-id526 . 1) (undo-tree-id527 . 1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . 1) (undo-tree-id531 . -2) (undo-tree-id532 . -2) (undo-tree-id533 . -2) (undo-tree-id534 . -2) (undo-tree-id535 . -2)) (23422 12483 838030 358000) 0 nil]) ((1984 . 1985)) nil (23422 12484 214744 75000) 0 nil]) ((#(" " 0 1 (fontified t face org-level-2)) . -1984) (undo-tree-id157 . -1) 1985) nil (23422 11855 63822 665000) 0 nil]) ((1973 . 1989)) nil (23422 11855 63843 494000) 0 nil]) ((#("v" 0 1 (fontified t face org-level-2)) . -1973) (undo-tree-id158 . -1) (#("o" 0 1 (fontified t face org-level-2)) . -1974) (undo-tree-id159 . -1) 1975) nil (23422 11855 63887 69000) 0 nil]) ((1973 . 1975)) nil (23422 11855 63934 866000) 0 nil]) ((#("o" 0 1 (fontified t face org-level-2)) . -1973) (undo-tree-id160 . -1) (#("n" 0 1 (fontified t face org-level-2)) . -1974) (undo-tree-id161 . -1) (#("-" 0 1 (fontified t face org-level-2)) . -1975) (undo-tree-id162 . -1) 1976) nil (23422 11855 63995 856000) 0 nil]) ((1973 . 1976)) nil (23422 11855 64022 257000) 0 nil]) ((1970 . 1973)) nil (23422 11855 64038 48000) 0 nil]) ((1969 . 1970) (t 23421 58224 129948 800000)) nil (23422 11855 64056 626000) 0 nil] [nil nil ((60581 . 60582) (t 23421 58224 129948 800000)) ((#("z" 0 1 (fontified t face org-level-2)) . 60581) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . 1) (undo-tree-id156 . -1)) (23422 11824 432081 560000) 0 nil] [nil nil ((60581 . 60600) (t 23421 58224 129948 800000)) ((#(" (Also before close" 0 19 (fontified t face org-level-2)) . 60581) (undo-tree-id111 . -19) (undo-tree-id112 . 19) (undo-tree-id113 . -1) (undo-tree-id114 . 18) (undo-tree-id115 . -2) (undo-tree-id116 . 17) (undo-tree-id117 . -3) (undo-tree-id118 . 16) (undo-tree-id119 . -4) (undo-tree-id120 . 15) (undo-tree-id121 . -5) (undo-tree-id122 . 14) (undo-tree-id123 . -6) (undo-tree-id124 . 13) (undo-tree-id125 . -7) (undo-tree-id126 . 12) (undo-tree-id127 . -8) (undo-tree-id128 . 11) (undo-tree-id129 . -9) (undo-tree-id130 . 10) (undo-tree-id131 . -10) (undo-tree-id132 . 9) (undo-tree-id133 . -11) (undo-tree-id134 . 8) (undo-tree-id135 . -12) (undo-tree-id136 . 7) (undo-tree-id137 . -13) (undo-tree-id138 . 6) (undo-tree-id139 . -14) (undo-tree-id140 . 5) (undo-tree-id141 . -15) (undo-tree-id142 . 4) (undo-tree-id143 . -16) (undo-tree-id144 . 3) (undo-tree-id145 . -17) (undo-tree-id146 . 2) (undo-tree-id147 . -18) (undo-tree-id148 . -19) (undo-tree-id149 . -19) (undo-tree-id150 . 1) (undo-tree-id151 . -19)) (23422 11823 528561 243000) 0 nil]) ((1796 . 1799)) nil (23422 11824 432312 730000) 0 nil]) ((#("1" 0 1 (fontified t face (bold) font-lock-multiline t org-emphasis t)) . -1796) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . 1) (undo-tree-id102 . -1) 1797) nil (23421 58224 114038 529000) 0 nil]) ((1781 . 1797)) nil (23421 58224 114072 244000) 0 nil]) ((1778 . 1781)) nil (23421 58224 114089 796000) 0 nil]) ((#("M" 0 1 (fontified t)) . -1778) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 1779) nil (23421 58224 114145 276000) 0 nil]) ((1758 . 1779)) nil (23421 58224 114169 915000) 0 nil]) ((#("
" 0 1 (fontified t)) . -1758) (undo-tree-id107 . -1) (#(" " 0 1 (fontified t font-lock-fontified t)) . -1759) (undo-tree-id108 . -1) (#(" " 0 1 (fontified t font-lock-fontified t)) . -1760) (undo-tree-id109 . -1) (#(" " 0 1 (fontified t font-lock-fontified t)) . -1761) (undo-tree-id110 . -1) 1762) nil (23421 58224 114235 290000) 0 nil] [nil ([nil ([nil nil ((#("SRC " 0 4 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -1770) (undo-tree-id65 . -4) (undo-tree-id66 . -4) (undo-tree-id67 . -4) (undo-tree-id68 . -4) 1774) ((1770 . 1774)) (23421 58202 322089 750000) 0 nil]) ((#("?" 0 1 (fontified nil)) . 1774) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (1762 . 1792) (#("<s" 0 2 (fontified t)) . -1762) (undo-tree-id71 . -2) (undo-tree-id72 . 2) (undo-tree-id73 . -1) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . 1) (undo-tree-id77 . -2) 1764) ((1762 . 1764) (#("#+BEGIN_SRC ?
   
   #+END_SRC" 0 8 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 8 12 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 12 13 (fontified nil) 13 14 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 14 17 (fontified nil font-lock-fontified t font-lock-multiline t face #16=(:inherit #15#)) 17 18 (fontified nil font-lock-fontified t font-lock-multiline t face #16#) 18 21 (fontified nil font-lock-fontified t face org-block-end-line font-lock-multiline t) 21 30 (fontified nil font-lock-fontified t face org-block-end-line font-lock-multiline t)) . 1762) (undo-tree-id78 . -12) (undo-tree-id79 . -30) (undo-tree-id80 . -30) (undo-tree-id81 . 17) (undo-tree-id82 . 30) (undo-tree-id83 . -12) (undo-tree-id84 . 17) (undo-tree-id85 . 17) (undo-tree-id86 . -8) (undo-tree-id87 . 17) (undo-tree-id88 . 17) (undo-tree-id89 . -12) (1774 . 1775)) (23421 58202 322821 925000) 0 nil]) ((1762 . 1764)) ((#("<s" 0 2 (fontified t)) . 1762) (undo-tree-id90 . -2) (undo-tree-id91 . 2) (undo-tree-id92 . -1) (undo-tree-id93 . 1) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2)) (23421 58202 555474 916000) 0 nil]) ((1758 . 1762)) nil (23421 58202 754453 25000) 0 nil]) ((1740 . 1758)) nil (23421 58202 322293 673000) 0 nil]) ((1719 . 1740)) nil (23421 58202 322308 984000) 0 nil]) ((1698 . 1719)) nil (23421 58202 322324 52000) 0 nil]) ((1695 . 1698)) nil (23421 58202 322338 834000) 0 nil]) ((1694 . 1695) (t 23421 58139 334381 892000)) nil (23421 58202 322357 303000) 0 nil] [nil ([nil ([nil ([nil ([nil nil ((#("root@localhost:" 0 15 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 12570) (undo-tree-id25 . -15) (undo-tree-id26 . -15) (undo-tree-id27 . -15) (undo-tree-id28 . -15) (undo-tree-id29 . 15) (undo-tree-id30 . 15) (undo-tree-id31 . 11) (undo-tree-id32 . -4) (undo-tree-id33 . 1) (undo-tree-id34 . 11) (undo-tree-id35 . -14) (undo-tree-id36 . 1) (undo-tree-id37 . -15) (undo-tree-id38 . -15) (undo-tree-id39 . -15) (undo-tree-id40 . -15) (undo-tree-id41 . 15) (undo-tree-id42 . 15) (undo-tree-id43 . 11) (undo-tree-id44 . -4) (undo-tree-id45 . 15) (undo-tree-id46 . 11)) ((12570 . 12585) (t 23421 58120 675917 669000)) (23421 58120 661010 176000) 0 nil]) ((#("x" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 12585) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . 1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (t 23421 58114 706089 90000)) ((12585 . 12586)) (23421 58134 509036 645000) 0 nil]) ((#("/" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 12564) (undo-tree-id21 . -1) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . 1)) ((12564 . 12565)) (23421 58134 860492 376000) 0 nil]) ((12586 . 12587)) ((#("x" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 12586) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1) (undo-tree-id56 . 1) (undo-tree-id57 . 1) (undo-tree-id58 . 1) (undo-tree-id59 . 1) (undo-tree-id60 . 1)) (23421 58135 388458 398000) 0 nil] [nil nil ((#("root@localhost:" 0 15 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . -12571) (undo-tree-id0 . -15) (undo-tree-id1 . 15) (undo-tree-id2 . 15) (undo-tree-id3 . 15) (undo-tree-id4 . -15) (undo-tree-id5 . 11) (undo-tree-id6 . 15) (undo-tree-id7 . -4) (undo-tree-id8 . 1) (undo-tree-id9 . 11) (undo-tree-id10 . -14) (undo-tree-id11 . 1) (undo-tree-id12 . -15) 12586) ((12571 . 12586) (t 23421 58094 993655 132000)) (23421 58094 981733 375000) 0 nil]) ((12569 . 12570) (t 23421 58110 802201 189000)) ((#(":" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) . 12569) (undo-tree-id61 . 1) (undo-tree-id62 . 1) (undo-tree-id63 . 1) (undo-tree-id64 . 1)) (23421 58136 140485 495000) 0 nil]) nil nil (23421 58137 467721 985000) 0 nil] #17# 8207 59 nil)