"41a9d600c382edff3b2ea2602fff93cacd50b57b"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#24=[nil nil ((3959 . 4693) (#("(if (not (boundp 'default-init-file))
    (defvar default-init-file
      (concat emacs-git \"SimonNewInit.org\")
      \"My Init File\")
  )

(defvar default-init-filename
  (file-name-nondirectory default-init-file)
  \"Name of the default init file\"
  )

(if (boundp 'default-work-notes-file)
    (defvar work-notebook-filename
      (file-name-nondirectory default-work-notes-file)
      \"Name of the default Work Notebook\")
  )

(if (boundp 'default-personal-notes-file)
    (defvar personal-notebook-filename
      (file-name-nondirectory default-personal-notes-file)
      \"Name of the default Personal Notebook\")
  )
(if (not (boundp 'default-init-file))
    (defalias `my-indent-mode `my-indent-mode-xjet
      \"My Indent Mode\")
  )
" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face #1=(org-block) help-echo nil src-block t) 1 3 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #1#) help-echo nil src-block t) 3 43 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 43 49 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #1#) help-echo nil src-block t) 49 50 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 50 67 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face . #1#) help-echo nil src-block t) 67 92 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 92 110 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-string-face . #1#) help-echo nil src-block t) 110 118 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 118 132 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face . #1#) help-echo nil src-block t) 132 140 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 140 146 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #1#) help-echo nil src-block t) 146 147 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 147 168 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face . #1#) help-echo nil src-block t) 168 216 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 216 247 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face . #1#) help-echo nil src-block t) 247 254 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 254 256 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #1#) help-echo nil src-block t) 256 296 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 296 302 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #1#) help-echo nil src-block t) 302 303 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 303 325 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-variable-name-face . #1#) help-echo nil src-block t) 325 387 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 387 422 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face . #1#) help-echo nil src-block t) 422 430 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 430 432 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #1#) help-echo nil src-block t) 432 476 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 476 482 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #1#) help-echo nil src-block t) 482 483 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 483 500 (fontified t font-lock-fontified t font-lock-multiline t face #2=(font-lock-variable-name-face . #1#) help-echo nil src-block t) 500 509 (fontified t font-lock-fontified t font-lock-multiline t face #2# help-echo nil src-block t) 509 575 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 575 614 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face . #1#) help-echo nil src-block t) 614 621 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 621 623 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #1#) help-echo nil src-block t) 623 663 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 663 671 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #1#) help-echo nil src-block t) 671 715 (fontified t font-lock-fontified t font-lock-multiline t face #1# help-echo nil src-block t) 715 731 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-doc-face . #1#) help-echo nil src-block t) 731 736 (fontified t font-lock-fontified t font-lock-multiline t face #1# src-block t) 736 737 (fontified t font-lock-fontified t font-lock-multiline t face #1# src-block t)) . 3959) (undo-tree-id754 . 737) (undo-tree-id755 . 737) (undo-tree-id756 . 737) (undo-tree-id757 . 737) (undo-tree-id758 . 737) (undo-tree-id759 . 737) (undo-tree-id760 . 737) (undo-tree-id761 . 737) (undo-tree-id762 . 737) (undo-tree-id763 . 737) (undo-tree-id764 . 737) (undo-tree-id765 . 737) (undo-tree-id766 . 737) (undo-tree-id767 . 737) (undo-tree-id768 . 737) (undo-tree-id769 . 737) (undo-tree-id770 . 737) (undo-tree-id771 . 737) (undo-tree-id772 . 737) (undo-tree-id773 . 737) (undo-tree-id774 . 737) (undo-tree-id775 . 737) (undo-tree-id776 . 737) (undo-tree-id777 . 737) (undo-tree-id778 . 737) (undo-tree-id779 . 737) (undo-tree-id780 . 737) (undo-tree-id781 . 737) (undo-tree-id782 . 737) (undo-tree-id783 . 737) (undo-tree-id784 . 737) (undo-tree-id785 . 737) (undo-tree-id786 . 737) (undo-tree-id787 . 737) (undo-tree-id788 . 737) (undo-tree-id789 . 737) (undo-tree-id790 . 737) (undo-tree-id791 . 737) (undo-tree-id792 . 737) (undo-tree-id793 . 737) (undo-tree-id794 . 737) (undo-tree-id795 . 737) (undo-tree-id796 . 737) (undo-tree-id797 . 737) (undo-tree-id798 . 737) (undo-tree-id799 . 737) (undo-tree-id800 . 737) (undo-tree-id801 . 737) (undo-tree-id802 . 737) (undo-tree-id803 . 737) (undo-tree-id804 . 737) (undo-tree-id805 . 737) (undo-tree-id806 . 737) (undo-tree-id807 . 737) (undo-tree-id808 . 737) (undo-tree-id809 . 737) (undo-tree-id810 . 737) (undo-tree-id811 . 737) (undo-tree-id812 . 737) (undo-tree-id813 . 737) (undo-tree-id814 . 737) (undo-tree-id815 . 737) (undo-tree-id816 . 737) (undo-tree-id817 . 737) (undo-tree-id818 . 737) (undo-tree-id819 . 737) (undo-tree-id820 . 737) (undo-tree-id821 . 737) (undo-tree-id822 . -732) (undo-tree-id823 . -732) (undo-tree-id824 . -736) (undo-tree-id825 . -736) 4696 (t 23409 49573 644191 123000)) nil (23409 49588 717886 991000) 0 nil]) ((3959 . 4696) (#("(if (not (boundp 'default-init-file))
    (defvar default-init-file
      (concat emacs-git \"SimonNewInit.org\")
      \"My Init File\")
  )

(defvar default-init-filename
  (file-name-nondirectory default-init-file)
  \"Name of the default init file\"
  )

(if (boundp 'default-work-notes-file)
    (defvar work-notebook-filename
      (file-name-nondirectory default-work-notes-file)
      \"Name of the default Work Notebook\")
  )

(if (boundp 'default-personal-notes-file)
    (defvar personal-notebook-filename
      (file-name-nondirectory default-personal-notes-file)
      \"Name of the default Personal Notebook\")
  )
(if (not (boundp 'default-init-file))
(defalias `my-indent-mode `my-indent-mode-xjet
  \"My Indent Mode\")
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3=(org-block)) 1 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #3#)) 3 43 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 43 49 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #3#)) 49 50 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 50 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #3#)) 67 92 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 92 110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #3#)) 110 118 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 118 132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #3#)) 132 140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 140 146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #3#)) 146 147 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 147 168 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #3#)) 168 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 216 247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #3#)) 247 254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 254 256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #3#)) 256 296 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 296 302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #3#)) 302 303 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 303 325 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #3#)) 325 387 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 387 422 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #3#)) 422 430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 430 432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #3#)) 432 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 475 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 476 482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #3#)) 482 483 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 483 509 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #3#)) 509 575 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #3#) 575 614 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #3#)) 614 620 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #3#) 620 621 (font-lock-fontified t src-block t fontified t font-lock-multiline t face #3# help-echo nil) 621 623 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face . #3#) help-echo nil) 623 656 (font-lock-fontified t src-block t fontified t font-lock-multiline t face #3# help-echo nil) 656 657 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face #3# help-echo nil) 657 658 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #3#) 658 659 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #3#) 659 667 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-keyword-face . #3#)) 667 707 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #3#) 707 723 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-doc-face . #3#)) 723 724 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face #3#) 724 725 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #3#)) . 3959) (undo-tree-id630 . -620) (undo-tree-id631 . -658) (undo-tree-id632 . 588) (undo-tree-id633 . 587) (undo-tree-id634 . 592) (undo-tree-id635 . 588) (undo-tree-id636 . 616) (undo-tree-id637 . 592) (undo-tree-id638 . 658) (undo-tree-id639 . 592) (undo-tree-id640 . 688) (undo-tree-id641 . 658) (undo-tree-id642 . 725) (undo-tree-id643 . 688) (undo-tree-id644 . -429) (undo-tree-id645 . 725) (undo-tree-id646 . 725) (undo-tree-id647 . 688) (undo-tree-id648 . 725) (undo-tree-id649 . 688) (undo-tree-id650 . 688) (undo-tree-id651 . 658) (undo-tree-id652 . 688) (undo-tree-id653 . 620) (undo-tree-id654 . 658) (undo-tree-id655 . 592) (undo-tree-id656 . 620) (undo-tree-id657 . 588) (undo-tree-id658 . 592) (undo-tree-id659 . 587) (undo-tree-id660 . 588) (undo-tree-id661 . 557) (undo-tree-id662 . 587) (undo-tree-id663 . 519) (undo-tree-id664 . 557) (undo-tree-id665 . 478) (undo-tree-id666 . 519) (undo-tree-id667 . 474) (undo-tree-id668 . 478) (undo-tree-id669 . 473) (undo-tree-id670 . 474) (undo-tree-id671 . 435) (undo-tree-id672 . 473) (undo-tree-id673 . 400) (undo-tree-id674 . 435) (undo-tree-id675 . 362) (undo-tree-id676 . 400) (undo-tree-id677 . 307) (undo-tree-id678 . 362) (undo-tree-id679 . 298) (undo-tree-id680 . 307) (undo-tree-id681 . 297) (undo-tree-id682 . 298) (undo-tree-id683 . 259) (undo-tree-id684 . 297) (undo-tree-id685 . 217) (undo-tree-id686 . 259) (undo-tree-id687 . 178) (undo-tree-id688 . 217) (undo-tree-id689 . 119) (undo-tree-id690 . 178) (undo-tree-id691 . 106) (undo-tree-id692 . 119) (undo-tree-id693 . 68) (undo-tree-id694 . 106) (undo-tree-id695 . 68) (undo-tree-id696 . 105) (undo-tree-id697 . 105) (undo-tree-id698 . 68) (undo-tree-id699 . 105) (undo-tree-id700 . 105) (undo-tree-id701 . -252) (undo-tree-id702 . -620) (undo-tree-id703 . -620) (undo-tree-id704 . 105) (undo-tree-id705 . 105) (undo-tree-id706 . 104) (undo-tree-id707 . 105) (undo-tree-id708 . 105) (undo-tree-id709 . 104) (undo-tree-id710 . 105) (undo-tree-id711 . 105) (undo-tree-id712 . -620) (undo-tree-id713 . 105) (undo-tree-id714 . 105) (undo-tree-id715 . 105) (undo-tree-id716 . 105) (undo-tree-id717 . -252) (undo-tree-id718 . 105) (undo-tree-id719 . 105) (undo-tree-id720 . -252) (undo-tree-id721 . 105) (undo-tree-id722 . 105) (undo-tree-id723 . -252) (undo-tree-id724 . 105) (undo-tree-id725 . 105) (undo-tree-id726 . -252) (undo-tree-id727 . 105) (undo-tree-id728 . 105) (undo-tree-id729 . -252) (undo-tree-id730 . 105) (undo-tree-id731 . 105) (undo-tree-id732 . -252) (undo-tree-id733 . 105) (undo-tree-id734 . 105) (undo-tree-id735 . -252) (undo-tree-id736 . 105) (undo-tree-id737 . 105) (undo-tree-id738 . -252) (undo-tree-id739 . 105) (undo-tree-id740 . 105) (undo-tree-id741 . -252) (undo-tree-id742 . 105) (undo-tree-id743 . 105) (undo-tree-id744 . -252) (undo-tree-id745 . 105) (undo-tree-id746 . 105) (undo-tree-id747 . -252) (undo-tree-id748 . 105) (undo-tree-id749 . 105) (undo-tree-id750 . -252) (undo-tree-id751 . 105) (undo-tree-id752 . 105) (undo-tree-id753 . -252) 4579) nil (23409 49573 581289 685000) 0 nil]) ((nil rear-nonsticky nil 4615 . 4616) (nil help-echo nil 4582 . 4616) (nil fontified nil 4582 . 4616) (nil help-echo nil 4580 . 4582) (nil fontified nil 4580 . 4582) (nil help-echo nil 4579 . 4580) (nil fontified nil 4579 . 4580) (4579 . 4616)) nil (23409 49573 581342 562000) 0 nil]) ((nil rear-nonsticky nil 4645 . 4646) (nil help-echo nil 4645 . 4646) (nil fontified nil 4645 . 4646) (nil help-echo nil 4629 . 4645) (nil fontified nil 4629 . 4645) (nil help-echo nil 4589 . 4629) (nil fontified nil 4589 . 4629) (nil help-echo nil 4581 . 4589) (nil fontified nil 4581 . 4589) (nil help-echo nil 4580 . 4581) (nil fontified nil 4580 . 4581) (4580 . 4646)) nil (23409 49573 581358 574000) 0 nil]) ((4578 . 4580) (t 23409 49522 90664 793000)) nil (23409 49573 581366 591000) 0 nil]) ((2600 . 2604)) nil (23409 49522 80058 916000) 0 nil]) ((#("git" 0 3 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2600) (undo-tree-id624 . -3) (undo-tree-id625 . -3) (undo-tree-id626 . -3) (undo-tree-id627 . -3) (undo-tree-id628 . -3) (undo-tree-id629 . 3) 2603) nil (23409 49522 80208 877000) 0 nil]) ((#("emacs-lisp" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2594) (2604 . 2613)) ((#("emacs-git" 0 9 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2604) (undo-tree-id451 . -9) (undo-tree-id453 . 9) (undo-tree-id455 . 9) (undo-tree-id457 . 9) (undo-tree-id459 . -9) (undo-tree-id461 . -9) (2594 . 2604)) (23409 49518 368337 941000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("emacs-" 0 6 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2594) (2600 . 2610) (t 23409 49502 501224 768000)) ((#("emacs-lisp" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2600) (undo-tree-id462 . -10) (undo-tree-id464 . -10) (undo-tree-id466 . -10) (2594 . 2600)) (23409 49518 154587 778000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((2593 . 2600)) ((#(".emacs-" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1 7 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2593) (undo-tree-id467 . -7) (undo-tree-id468 . -7) (undo-tree-id469 . -7) (undo-tree-id470 . -7) (undo-tree-id471 . -7) (t 23409 49502 501224 768000)) (23409 49516 824278 687000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("emacs-lisp" 0 10 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2593) (undo-tree-id616 . -10) (undo-tree-id617 . -10) (undo-tree-id618 . -10) (undo-tree-id619 . 4) (undo-tree-id620 . 10) (undo-tree-id621 . 4) (undo-tree-id622 . -10) (undo-tree-id623 . -10)) ((2593 . 2603)) (23409 49516 610494 551000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((3958 . 4578) (#("    (if (not (boundp 'default-init-file))
        (defvar default-init-file
          (concat emacs-git \"SimonNewInit.org\")
          \"My Init File\")
      )

    (defvar default-init-filename
      (file-name-nondirectory default-init-file)
      \"Name of the default init file\"
      )

    (if (boundp 'default-work-notes-file)
        (defvar work-notebook-filename
          (file-name-nondirectory default-work-notes-file)
          \"Name of the default Work Notebook\")
      )

    (if (boundp 'default-personal-notes-file)
        (defvar personal-notebook-filename
          (file-name-nondirectory default-personal-notes-file)
          \"Name of the default Personal Notebook\")
      )
" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4=(org-block)) 5 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #4#)) 7 51 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 51 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #4#)) 57 58 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 58 75 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #4#)) 75 76 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 76 104 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 104 122 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #4#)) 122 134 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 134 148 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #4#)) 148 164 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 164 170 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #4#)) 170 171 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 171 192 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #4#)) 192 248 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 248 279 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #4#)) 279 294 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 294 296 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #4#)) 296 340 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 340 346 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #4#)) 346 347 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 347 369 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #4#)) 369 417 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 417 439 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 439 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #4#)) 474 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 475 490 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 490 492 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #4#)) 492 500 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 500 540 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 540 546 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #4#)) 546 547 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 547 573 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #4#)) 573 576 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 576 647 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #4#) 647 686 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #4#)) 686 695 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #4#) 695 696 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #4#)) . 3958) (undo-tree-id596 . -696) (undo-tree-id597 . -696) (undo-tree-id598 . -696) (undo-tree-id599 . -696) (undo-tree-id600 . -696) (undo-tree-id601 . -696) (undo-tree-id602 . -696) (undo-tree-id603 . -696) (undo-tree-id604 . -696) (undo-tree-id605 . -696) (undo-tree-id606 . 696) (undo-tree-id607 . 696) (undo-tree-id608 . 696) (undo-tree-id609 . 696) (undo-tree-id610 . 696) (undo-tree-id611 . 696) (undo-tree-id612 . 696) (undo-tree-id613 . 696) (undo-tree-id614 . 696) (undo-tree-id615 . 696)) ((3958 . 4654) (#("(if (not (boundp 'default-init-file))
    (defvar default-init-file
      (concat emacs-git \"SimonNewInit.org\")
      \"My Init File\")
  )

(defvar default-init-filename
  (file-name-nondirectory default-init-file)
  \"Name of the default init file\"
  )

(if (boundp 'default-work-notes-file)
    (defvar work-notebook-filename
      (file-name-nondirectory default-work-notes-file)
      \"Name of the default Work Notebook\")
  )

(if (boundp 'default-personal-notes-file)
    (defvar personal-notebook-filename
      (file-name-nondirectory default-personal-notes-file)
      \"Name of the default Personal Notebook\")
  )
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5=(org-block)) 1 3 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 3 43 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 43 49 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 49 50 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 50 67 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #5#)) 67 92 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 92 110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #5#)) 110 118 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 118 132 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #5#)) 132 140 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 140 146 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 146 147 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 147 168 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #5#)) 168 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 216 247 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #5#)) 247 254 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 254 256 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 256 296 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 296 302 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 302 303 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 303 325 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #5#)) 325 387 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 387 422 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #5#)) 422 430 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 430 432 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 432 475 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 475 476 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 476 482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #5#)) 482 483 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 483 509 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #5#)) 509 575 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #5#) 575 614 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #5#)) 614 619 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #5#) 619 620 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #5#)) . 3958)) (23409 49516 396951 163000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((2604 . 3863) (#("     ;This is done to safely ignore local-variables warnings
     (setq enable-local-variables :safe)

     ;Setting basic location and variables - override those if needed
     (defvar emacs-git
      \"/home/simon/github/SimonEnv/Emacs/\"
      \"The location of my Emacs environment settings\")

     (defvar default-work-notes-file
      \"/home/simon/github/XJetWorkNotes/WorkNotebook.org\"
      \"The location of my Work Notebook (somewhere on the work server?)\")

     (defvar default-personal-notes-file
      \"/home/simon/Notebook/NoteBook.org\"
      \"The location of my personal notebook (mounted from EncFS)\")

     (defvar default-init-file
      (concat emacs-git \"SimonNewInit.org\")
      \"My Init File\")

     (defvar my-emacs-monitors-num 1
      \"The number of monitors to take into account when calculating the Emacs window size (2/3 of the
       available width)\")

     (defalias `my-indent-mode `my-indent-mode-xjet
      \"My Indent Mode\")

     ;emacs persistance directory
     (if (not (boundp 'emacs-persistance-dir))
         (setq emacs-persistance-dir \"/home/simon/.emacs.d\")
     )

     ;;Loading the rest of the configuration from my environment
     (if (string-equal (file-name-extension default-init-file) \"org\")
       ;;The new way: via org mode
       (org-babel-load-file default-init-file)

       ;;Else: The old way
       (load default-init-file)
     )
" 0 5 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 5 6 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 6 61 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 61 67 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 67 71 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 71 95 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 95 100 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 100 108 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 108 109 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 109 173 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 173 179 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 179 185 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 185 186 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 186 195 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 195 202 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 202 203 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 203 237 (fontified nil font-lock-fontified t src-block t help-echo nil face (italic) font-lock-multiline t org-emphasis t) 237 238 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 238 245 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 245 292 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 292 301 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 301 307 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 307 308 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 308 331 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 331 338 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 338 389 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 389 396 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 396 462 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 462 471 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 471 473 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 473 474 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 474 476 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 476 477 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 477 478 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 478 480 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 480 482 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 482 483 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 483 484 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 484 500 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 500 505 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 505 506 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 506 512 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 512 547 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 547 554 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 554 613 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 613 622 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 622 628 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 628 629 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 629 646 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 646 671 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 671 689 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 689 697 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 697 711 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 711 720 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 720 726 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 726 727 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 727 748 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 748 757 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 757 876 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 876 877 (fontified nil font-lock-fontified t src-block t help-echo #6="Hidden behind deeper element; move to another line?" font-lock-multiline t) 877 878 (fontified nil font-lock-fontified t src-block t help-echo #6# font-lock-multiline t) 878 880 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 880 885 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 885 886 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 886 889 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 889 894 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 894 895 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 895 898 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 898 910 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 910 911 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 911 912 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 912 931 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 931 932 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 932 937 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 937 938 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 938 954 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 954 955 (font-lock-fontified t src-block t rear-nonsticky t fontified nil help-echo nil font-lock-multiline t) 955 962 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 962 963 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 963 991 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 991 997 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 997 999 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 999 1010 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1010 1015 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1015 1048 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1048 1052 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1052 1075 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1075 1076 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1076 1081 (fontified nil font-lock-fontified t src-block t help-echo nil face #7=(italic) font-lock-multiline t org-emphasis t) 1081 1083 (fontified nil font-lock-fontified t src-block t help-echo nil face #7# font-lock-multiline t org-emphasis t) 1083 1088 (fontified nil font-lock-fontified t src-block t help-echo nil face #7# font-lock-multiline t org-emphasis t) 1088 1097 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1097 1112 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1112 1114 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1114 1172 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1172 1178 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1178 1180 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1180 1235 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1235 1240 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1240 1249 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1249 1251 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1251 1277 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1277 1332 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1332 1334 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1334 1352 (fontified nil font-lock-fontified t src-block t help-echo nil font-lock-multiline t) 1352 1389 (fontified nil font-lock-fontified t src-block t font-lock-multiline t) 1389 1390 (fontified nil font-lock-fontified t src-block t font-lock-multiline t) 1390 1391 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face org-meta-line)) . 2604) (undo-tree-id521 . -957) (undo-tree-id522 . -957) (undo-tree-id523 . -957) (undo-tree-id524 . -957) (undo-tree-id525 . -938) (undo-tree-id526 . 453) (undo-tree-id527 . 453) (undo-tree-id528 . -880) (undo-tree-id529 . 1366) (undo-tree-id530 . 1366) (undo-tree-id531 . 453) (undo-tree-id532 . 454) (undo-tree-id533 . 453) (undo-tree-id534 . -506) (undo-tree-id535 . -506) (undo-tree-id536 . 506) (undo-tree-id537 . 454) (undo-tree-id538 . -506) (undo-tree-id539 . -506) (undo-tree-id540 . 436) (undo-tree-id541 . 436) (undo-tree-id542 . -506) (undo-tree-id543 . -506) (undo-tree-id544 . 436) (undo-tree-id545 . 436) (undo-tree-id546 . -506) (undo-tree-id547 . -506) (undo-tree-id548 . 436) (undo-tree-id549 . 436) (undo-tree-id550 . -506) (undo-tree-id551 . 843) (undo-tree-id552 . 843) (undo-tree-id553 . 843) (undo-tree-id554 . -615) (undo-tree-id555 . -615) (undo-tree-id556 . -646) (undo-tree-id557 . -646) (undo-tree-id558 . -690) (undo-tree-id559 . -690) (undo-tree-id560 . -712) (undo-tree-id561 . -712) (undo-tree-id562 . -713) (undo-tree-id563 . -713) (undo-tree-id564 . -750) (undo-tree-id565 . -750) (undo-tree-id566 . -852) (undo-tree-id567 . -852) (undo-tree-id568 . -878) (undo-tree-id569 . -878) (undo-tree-id570 . -879) (undo-tree-id571 . -879) (undo-tree-id572 . -931) (undo-tree-id573 . -931) (undo-tree-id574 . -955) (undo-tree-id575 . -955) (undo-tree-id576 . -956) (undo-tree-id577 . -956) (undo-tree-id578 . -990) (undo-tree-id579 . -990) (undo-tree-id580 . -1037) (undo-tree-id581 . -1037) (undo-tree-id582 . -1098) (undo-tree-id583 . -1098) (undo-tree-id584 . -1105) (undo-tree-id585 . -1105) (undo-tree-id586 . -1106) (undo-tree-id587 . -1106) (undo-tree-id588 . -1171) (undo-tree-id589 . -1171) (undo-tree-id590 . -1241) (undo-tree-id591 . -1241) (undo-tree-id592 . -1276) (undo-tree-id593 . -1276) (undo-tree-id594 . -1323) (undo-tree-id595 . -1323)) ((2604 . 3995) (#(";;This is done to safely ignore local-variables warnings
(setq enable-local-variables :safe)

;;Setting basic location and variables - override those if needed
(defvar emacs-git
  \"/home/simon/github/SimonEnv/Emacs/\"
  \"The location of my Emacs environment settings\")

(defvar default-work-notes-file
  \"/home/simon/github/XJetWorkNotes/WorkNoteBook.org\"
  \"The location of my Work Notebook (somewhere on the work server?)\")

(defvar default-personal-notes-file
  \"/home/simon/Notebook/NoteBook.org\"
  \"The location of my personal notebook (mounted from EncFS)\")

(defvar default-init-file 
  (concat emacs-git \"SimonNewInit.org\") 
  \"My Init File\")

(defvar my-emacs-monitors-num 1
  \"The number of monitors to take into account when calculating the Emacs window size (2/3 of the
  available width)\")

(defalias `my-indent-mode `my-indent-mode-xjet
  \"My Indent Mode\")

;;emacs persistance directory
(if (not (boundp 'emacs-persistance-dir))
    (setq emacs-persistance-dir \"/home/simon/.emacs.d\")
  )

;;Loading the rest of the configuration from my environment
(if (string-equal (file-name-extension default-init-file) \"org\")
    ;;The new way: via org mode
    (org-babel-load-file default-init-file)

  ;;Else: The old way
  (load default-init-file)
  )
" 0 2 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #8=(org-block))) 2 57 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #8#)) 57 58 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 58 62 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 62 86 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 86 91 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face . #8#)) 91 94 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 94 96 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #8#)) 96 160 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #8#)) 160 161 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 161 167 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 167 168 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 168 177 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #8#)) 177 180 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 180 181 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #9=(font-lock-string-face . #8#)) 181 215 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face #9#) 215 216 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #9#) 216 219 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 219 266 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #8#)) 266 270 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 270 276 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 276 277 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 277 300 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #8#)) 300 303 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 303 354 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #8#)) 354 357 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 357 423 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #8#)) 423 427 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 427 433 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 433 434 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 434 461 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #8#)) 461 464 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 464 473 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10=(font-lock-string-face . #8#)) 473 474 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 474 477 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 477 478 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 478 479 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 479 480 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 480 481 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 481 482 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 482 483 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 483 484 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 484 499 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #10#) 499 502 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 502 561 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #8#)) 561 565 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 565 571 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 571 572 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 572 589 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #8#)) 589 611 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 611 629 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #8#)) 629 634 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 634 648 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #8#)) 648 652 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 652 658 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 658 659 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 659 680 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-variable-name-face . #8#)) 680 685 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 685 799 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #11=(font-lock-doc-face . #8#)) 799 800 (fontified t font-lock-fontified t help-echo #6# src-block t font-lock-multiline t face #11#) 800 801 (fontified t font-lock-fontified t help-echo #6# src-block t font-lock-multiline t face #8#) 801 804 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 804 812 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 812 852 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 852 868 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-doc-face . #8#)) 868 871 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 871 873 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #8#)) 873 901 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #8#)) 901 902 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 902 904 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 904 948 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 948 952 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 952 975 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 975 976 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #12=(font-lock-string-face . #8#)) 976 988 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t org-emphasis t face #12#) 988 997 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #12#) 997 1004 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 1004 1006 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #8#)) 1006 1064 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #8#)) 1064 1065 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 1065 1067 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-keyword-face . #8#)) 1067 1122 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 1122 1127 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face . #8#)) 1127 1133 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 1133 1135 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #8#)) 1135 1161 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #8#)) 1161 1208 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #8#) 1208 1210 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #8#)) 1210 1228 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-face . #8#)) 1228 1258 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #8#) 1258 1259 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #8#)) . 2604) (undo-tree-id472 . 1259) (undo-tree-id473 . 1259) (undo-tree-id474 . 1259) (undo-tree-id475 . 1258) (undo-tree-id476 . 1259) (undo-tree-id477 . 1259) (undo-tree-id478 . -160) (undo-tree-id479 . -1004) (undo-tree-id480 . -1004) (undo-tree-id481 . -177)) (23409 49516 185247 903000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("+BEGIN_SRC " 0 11 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2582) (undo-tree-id519 . -11) (undo-tree-id520 . -11) (2593 . 2614)) ((#("+BEGIN_SRC emacs-lisp" 0 11 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 11 21 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2593) (undo-tree-id482 . -21) (undo-tree-id483 . -21) (undo-tree-id484 . -21) (undo-tree-id485 . -11) (undo-tree-id486 . 4) (undo-tree-id487 . 10) (undo-tree-id488 . 4) (undo-tree-id489 . -21) (undo-tree-id490 . -21) (2582 . 2593)) (23409 49515 967981 633000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("el" 0 1 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1 2 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2593) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . 2)) ((2593 . 2595)) (23409 49515 754141 352000) 0 (:visualizer [0 1 0 #<marker in no buffer>])] [nil ([nil nil ((nil fontified t 2597 . 2601) (nil font-lock-fontified t 2597 . 2601) (nil font-lock-multiline t 2597 . 2601) (nil face org-block-begin-line 2597 . 2601) (#("else" 0 4 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -2593) (2597 . 2605) 2597) ((#("elements" 0 8 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2597) (undo-tree-id342 . -8) (undo-tree-id343 . 8) (undo-tree-id344 . 8) (undo-tree-id345 . -8) (undo-tree-id346 . -8) (undo-tree-id347 . -8) (undo-tree-id348 . -8) (2593 . 2597)) (23409 49399 466999 189000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("el" 0 2 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -2593) (2595 . 2599) 2595) ((#("else" 0 4 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2595) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (2593 . 2595)) (23409 49399 467906 331000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((2593 . 2595)) ((#("el" 0 1 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line) 1 2 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2593) (undo-tree-id491 . -2) (undo-tree-id492 . -2) (undo-tree-id493 . -2)) (23409 49514 403292 365000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#(".emacs-file" 0 11 (fontified nil font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . 2593) (undo-tree-id512 . -11) (undo-tree-id513 . 10) (undo-tree-id514 . -11) (undo-tree-id515 . -11)) ((2593 . 2604)) (23409 49514 190738 59000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#(" " 0 1 (font-lock-fontified t src-block t fontified nil font-lock-multiline t)) . 3543) (undo-tree-id510 . 1) (undo-tree-id511 . 1)) ((3543 . 3544)) (23409 49513 977131 254000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((3537 . 3542)) ((#("     " 0 5 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t)) . 3537)) (23409 49513 763555 347000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((3485 . 3490)) ((#("     " 0 5 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t)) . 3485)) (23409 49513 549986 562000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((nil fontified nil 3550 . 3551) (3485 . 3551)) ((#("(defalias `my-indent-mode `my-indent-mode-xjet
  \"My Indent Mode\")" 0 1 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 1 4 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 4 9 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 9 10 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 10 13 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 13 25 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 25 26 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 26 27 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 27 46 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 46 47 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 47 48 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 48 49 (font-lock-fontified t src-block t fontified nil font-lock-multiline t) 49 65 (font-lock-fontified t src-block t fontified nil help-echo nil font-lock-multiline t) 65 66 (font-lock-fontified t src-block t rear-nonsticky t fontified nil help-echo nil font-lock-multiline t)) . 3485) (undo-tree-id494 . -48) (undo-tree-id495 . 17) (undo-tree-id496 . 17) (undo-tree-id497 . 18) (undo-tree-id498 . 19) (undo-tree-id499 . 18) (undo-tree-id500 . 66) (undo-tree-id501 . 19) (undo-tree-id502 . -66) (undo-tree-id503 . -66) (nil fontified t 3550 . 3551)) (23409 49513 336401 628000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((3483 . 3485)) ((#("

" 0 2 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t)) . 3483) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -2) (undo-tree-id508 . -2) (undo-tree-id509 . -2)) (23409 49513 122412 706000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31000) (undo-tree-id325 . 1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . 1) (undo-tree-id329 . 1)) ((31000 . 31001) (t 23409 49070 88648 625000)) (23409 49508 531206 943000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("      " 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31000) (undo-tree-id321 . -6) (undo-tree-id322 . -6) (undo-tree-id323 . -6) (undo-tree-id324 . -6)) ((31000 . 31006)) (23409 49360 764063 140000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#(")" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 31006)) ((31006 . 31007)) (23409 49360 588733 404000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("
" 0 1 (fontified nil font-lock-fontified t src-block t font-lock-multiline t face #13=(org-block))) . 4710) (undo-tree-id295 . 1) (undo-tree-id296 . 1) (undo-tree-id297 . 1) (undo-tree-id298 . 1) (undo-tree-id299 . 1) (undo-tree-id300 . 1) (undo-tree-id301 . 1) (undo-tree-id302 . 1) (undo-tree-id303 . 1) (#("
" 0 1 (fontified t font-lock-fontified t src-block t help-echo nil font-lock-multiline t face #13#)) . 4710) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . 1) (undo-tree-id319 . -1) (undo-tree-id320 . -1)) ((4710 . 4711) (4710 . 4711)) (23409 49360 397687 12000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("    (if (not (boundp 'default-indent-mode))
        (defvar default-indent-mode
          (my-indent-mode-xjet)
          \"My Indent Mode\")
      )" 0 5 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #14=(org-block)) 5 7 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-keyword-face . #14#)) 7 53 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #14#) 53 59 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-keyword-face . #14#)) 59 60 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #14#) 60 79 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-variable-name-face . #14#)) 79 91 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #14#) 91 110 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #14#) 110 122 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #14#) 122 137 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #15=(font-lock-doc-face . #14#)) 137 138 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #15#) 138 146 (font-lock-fontified t src-block t fontified t font-lock-multiline t face #14#) 146 147 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face #14#)) . -4711) (undo-tree-id206 . -30) (undo-tree-id207 . -37) (undo-tree-id208 . -60) (undo-tree-id209 . -68) (undo-tree-id210 . -75) (undo-tree-id211 . -110) (undo-tree-id212 . -91) (undo-tree-id213 . -110) (undo-tree-id214 . -126) (undo-tree-id215 . -137) (undo-tree-id216 . 103) (undo-tree-id217 . 103) (undo-tree-id218 . 103) (undo-tree-id219 . 103) (undo-tree-id220 . 103) (undo-tree-id221 . 103) (undo-tree-id222 . 103) (undo-tree-id223 . 103) (undo-tree-id224 . -44) (undo-tree-id225 . -44) (undo-tree-id226 . -147) (undo-tree-id227 . 103) (undo-tree-id228 . 103) (undo-tree-id229 . -139) (undo-tree-id230 . -44) (undo-tree-id231 . 103) (undo-tree-id232 . 10) (undo-tree-id233 . -137) (undo-tree-id234 . -147) (undo-tree-id235 . -147) (undo-tree-id236 . 10) (undo-tree-id237 . 10) (undo-tree-id238 . 42) (undo-tree-id239 . 10) (undo-tree-id240 . 78) (undo-tree-id241 . 42) (undo-tree-id242 . 122) (undo-tree-id243 . 78) (undo-tree-id244 . 147) (undo-tree-id245 . 122) (undo-tree-id246 . -44) (undo-tree-id247 . 147) (undo-tree-id248 . 147) (undo-tree-id249 . -147) (undo-tree-id250 . 103) (undo-tree-id251 . 147) (undo-tree-id252 . 67) (undo-tree-id253 . 103) (undo-tree-id254 . 35) (undo-tree-id255 . 67) (undo-tree-id256 . 7) (undo-tree-id257 . 35) (undo-tree-id258 . 7) (undo-tree-id259 . 1) (undo-tree-id260 . -147) (undo-tree-id261 . 143) (undo-tree-id262 . -5) 4858 (t 23409 48563 283780 477000)) nil (23409 49359 925779 954000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#(" File" 0 5 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-doc-face org-block))) . 4848) (undo-tree-id143 . -5) (undo-tree-id144 . -5)) ((4848 . 4853) (t 23409 48563 283780 477000)) (23409 48976 159958 227000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4837 . 4848)) nil (23409 48975 56182 188000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("i" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-doc-face org-block))) . -4837) (undo-tree-id126 . -1) (#("n" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-doc-face org-block))) . -4838) (undo-tree-id127 . -1) 4839) nil (23409 48563 276318 336000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4838 . 4839)) nil (23409 48563 276343 776000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4837 . 4838)) nil (23409 48563 276359 924000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("Init" 0 4 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-doc-face org-block))) . 4837) (undo-tree-id128 . -4) (undo-tree-id129 . -4) 4841) nil (23409 48563 276397 289000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#(" \"SimonNewInit.org\"" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face #16=(org-block)) 1 19 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-string-face . #16#))) . -4821) (undo-tree-id130 . -19) (undo-tree-id131 . -19) 4840) nil (23409 48563 276439 314000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((nil fontified t 4812 . 4821) (nil font-lock-fontified t 4812 . 4821) (nil font-lock-multiline t 4812 . 4821) (nil face #17=(org-block) 4812 . 4821) (nil help-echo nil 4812 . 4821) (nil src-block t 4812 . 4821) (#("my-indent" 0 9 (fontified t font-lock-fontified t font-lock-multiline t face #17# help-echo nil src-block t)) . -4802) (4811 . 4830) 4811) nil (23409 48563 276487 437000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("my-in" 0 5 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . -4802) (4807 . 4816) 4807) nil (23409 48563 276521 914000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4802 . 4807)) nil (23409 48563 276540 981000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("concat emacs-git" 0 16 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . -4802) (undo-tree-id132 . -16) (undo-tree-id133 . -16) 4814) nil (23409 48563 276586 63000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4789 . 4790)) nil (23409 48563 276606 616000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("r" 0 1 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-variable-name-face org-block))) . -4789) (undo-tree-id134 . -1) 4790) nil (23409 48563 276656 757000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4786 . 4790)) nil (23409 48563 276676 523000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("file" 0 4 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-variable-name-face org-block))) . -4786) (undo-tree-id135 . -4) (undo-tree-id136 . -4)) nil (23409 48563 276709 997000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4779 . 4785)) nil (23409 48563 276730 488000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("init" 0 4 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (font-lock-variable-name-face org-block))) . -4779) (undo-tree-id137 . -4) (undo-tree-id138 . -4)) nil (23409 48563 276771 375000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4748 . 4752)) nil (23409 48563 276790 996000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("file" 0 4 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . -4748) (undo-tree-id139 . -4) (undo-tree-id140 . -4)) nil (23409 48563 276824 524000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4741 . 4747)) nil (23409 48563 276844 933000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("init" 0 4 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (org-block) help-echo nil)) . -4741) (undo-tree-id141 . -4) (undo-tree-id142 . -4)) nil (23409 48563 276878 20000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((nil rear-nonsticky nil 4867 . 4868) (nil help-echo nil 4859 . 4868) (nil fontified nil 4859 . 4868) (nil help-echo nil 4845 . 4859) (nil fontified nil 4845 . 4859) (nil help-echo nil 4833 . 4845) (nil fontified nil 4833 . 4845) (nil help-echo nil 4815 . 4833) (nil fontified nil 4815 . 4833) (nil help-echo nil 4786 . 4815) (nil fontified nil 4786 . 4815) (nil help-echo nil 4769 . 4786) (nil fontified nil 4769 . 4786) (nil help-echo nil 4768 . 4769) (nil fontified nil 4768 . 4769) (nil help-echo nil 4762 . 4768) (nil fontified nil 4762 . 4768) (nil help-echo nil 4718 . 4762) (nil fontified nil 4718 . 4762) (nil help-echo nil 4716 . 4718) (nil fontified nil 4716 . 4718) (nil help-echo nil 4711 . 4716) (nil fontified nil 4711 . 4716) (4711 . 4868)) nil (23409 48563 276982 720000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((4709 . 4711) (t 23409 48489 341931 950000)) nil (23409 48563 277042 815000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32251 . 32256) (t 23409 48484 90085 956000)) nil (23409 48489 336061 789000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32251 . 32339) (#("(add-hook 'python-mode-hook
          (lambda ()
            (my-indent-mode))
          )
" 0 39 (fontified t font-lock-fontified t font-lock-multiline t face #18=(org-block) help-echo nil src-block t) 39 45 (fontified t font-lock-fontified t font-lock-multiline t face (font-lock-keyword-face . #18#) help-echo nil src-block t) 45 90 (fontified t font-lock-fontified t font-lock-multiline t face #18# src-block t) 90 91 (fontified t font-lock-fontified t font-lock-multiline t face #18# src-block t)) . 32251) (undo-tree-id68 . -28) (undo-tree-id69 . -28) (undo-tree-id70 . 63) (undo-tree-id71 . 52) (undo-tree-id72 . 63) (undo-tree-id73 . 63) (undo-tree-id74 . 63) (undo-tree-id75 . 63) (undo-tree-id76 . 63) (undo-tree-id77 . 63) (undo-tree-id78 . 63) (undo-tree-id79 . 63) (undo-tree-id80 . 63) (undo-tree-id81 . 63) (undo-tree-id82 . 63) (undo-tree-id83 . 63) (undo-tree-id84 . 63) (undo-tree-id85 . 63) (undo-tree-id86 . 63) (undo-tree-id87 . 63) (undo-tree-id88 . 63) (undo-tree-id89 . 63) (undo-tree-id90 . 63) (undo-tree-id91 . 63) (undo-tree-id92 . 63) (undo-tree-id93 . 63) (undo-tree-id94 . 63) (undo-tree-id95 . 63) (undo-tree-id96 . -28) 32279) nil (23409 48484 88137 338000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32251 . 32342) (#("        (add-hook 'python-mode-hook
       (lambda ()
         (my-indent-mode))
       )
" 0 3 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #19=(org-block) help-echo nil) 3 44 (font-lock-fontified t src-block t fontified t font-lock-multiline t face #19# help-echo nil) 44 50 (font-lock-fontified t src-block t fontified t font-lock-multiline t face (font-lock-keyword-face . #19#) help-echo nil) 50 88 (font-lock-fontified t src-block t fontified t font-lock-multiline t face #19#) 88 89 (font-lock-fontified t src-block t fontified t rear-nonsticky t font-lock-multiline t face #19#) 89 90 (fontified t font-lock-fontified t src-block t font-lock-multiline t face #19#)) . 32251) (undo-tree-id97 . -3) (undo-tree-id98 . 1) (undo-tree-id99 . 87) (undo-tree-id100 . 1) (undo-tree-id101 . 1) (undo-tree-id102 . -89) (undo-tree-id103 . -89) (undo-tree-id104 . 1) (undo-tree-id105 . 1) (undo-tree-id106 . 1) (undo-tree-id107 . 1) 32340) nil (23409 48484 88187 684000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((nil rear-nonsticky nil 32339 . 32340) (nil help-echo nil 32301 . 32340) (nil fontified nil 32301 . 32340) (nil help-echo nil 32295 . 32301) (nil fontified nil 32295 . 32301) (nil help-echo nil 32254 . 32295) (nil fontified nil 32254 . 32295) (32254 . 32340)) nil (23409 48484 88204 167000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("+BEGIN_SRC " 0 11 (fontified t font-lock-fontified t font-lock-multiline t face org-block-begin-line)) . -32229) (32240 . 32261) 32240) nil (23409 48484 88212 472000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("?" 0 1 (fontified nil)) . 32240) (32228 . 32258) (#("<s" 0 2 (fontified t font-lock-fontified t)) . -32228) (undo-tree-id108 . -2) 32230) nil (23409 48484 88221 856000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32228 . 32230)) nil (23409 48484 88227 136000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32225 . 32228)) nil (23409 48484 88230 990000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32224 . 32225)) nil (23409 48484 88234 720000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32220 . 32224)) nil (23409 48484 88238 341000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("m" 0 1 (fontified t font-lock-fontified t face org-level-2)) . -32220) (undo-tree-id109 . -1) 32221) nil (23409 48484 88244 750000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32213 . 32221)) nil (23409 48484 88251 368000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("   " 0 3 (fontified t font-lock-fontified t)) . -32213) (undo-tree-id110 . -3) (undo-tree-id111 . -3)) nil (23409 48484 88259 870000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32213 . 32216)) nil (23409 48484 88264 604000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((32212 . 32213)) nil (23409 48484 88267 934000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#(" " 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 36520) (undo-tree-id67 . 1)) ((36520 . 36521)) (23409 48420 64591 880000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("-xjet" 0 5 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . -36520) (undo-tree-id61 . -5) (undo-tree-id62 . -5) 36525) nil (23409 48419 712820 391000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("-xjet" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -36342) (undo-tree-id63 . -5) (undo-tree-id64 . -5) 36347) nil (23409 48419 711905 284000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("-xjet" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . -32071) (undo-tree-id65 . -5) (undo-tree-id66 . -5) 32076) nil (23409 48419 711949 380000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((31736 . 31747)) nil (23409 48419 711970 914000) 0 (:visualizer [1 0 1 #<marker in no buffer>])]) ((#("
" 0 1 (fontified t font-lock-fontified t src-block t font-lock-multiline t face (org-block))) . 31773) (t 23409 48334 523507 802000)) nil (23409 48419 711990 119000) 0 (:visualizer [1 0 1 #<marker in no buffer>])] [nil nil ((#("
" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) . 11620) (undo-tree-id24 . 1) (undo-tree-id25 . 1) (undo-tree-id26 . 1) (undo-tree-id27 . 1) (undo-tree-id28 . 1) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (undo-tree-id37 . 1) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1) (undo-tree-id41 . 1)) ((11620 . 11621)) (23409 48334 122475 55000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((#("                                              ;(setq lua-indent-level 2)" 0 46 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #20=(org-block)) 46 47 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face . #20#)) 47 63 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #21=(font-lock-comment-face . #20#)) 63 72 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face #21#)) . -11620) (undo-tree-id42 . -72) (undo-tree-id43 . -72) (undo-tree-id44 . -72) (undo-tree-id45 . 19) (undo-tree-id46 . 19) (undo-tree-id47 . 18) (undo-tree-id48 . 19) (undo-tree-id49 . 19) (undo-tree-id50 . 18) (undo-tree-id51 . 19) (undo-tree-id52 . 72) (undo-tree-id53 . 72) (undo-tree-id54 . 72) (undo-tree-id55 . -72) (undo-tree-id56 . 72) (undo-tree-id57 . 1) (undo-tree-id58 . -72) (undo-tree-id59 . 25) (undo-tree-id60 . -48) 11692 (t 23409 48321 649882 833000)) nil (23409 48334 123426 890000) 0 (:visualizer [2 0 1 #<marker in no buffer>])]) ((nil help-echo #6# 31121 . 31122) (nil fontified nil 31121 . 31122) (nil help-echo #6# 31106 . 31121) (nil fontified nil 31106 . 31121) (31106 . 31122)) nil (23409 48321 632984 218000) 0 (:visualizer [2 0 1 #<marker in no buffer>])]) ((#("perl-indent-level" 0 17 (font-lock-fontified t src-block t fontified t help-echo nil font-lock-multiline t face (org-block))) . -31106) (undo-tree-id4 . -17) (undo-tree-id5 . 17) (undo-tree-id6 . 17) (undo-tree-id7 . 17) (undo-tree-id8 . -17) (undo-tree-id9 . 13) (undo-tree-id10 . 17) (undo-tree-id11 . 6) (undo-tree-id12 . 13) (undo-tree-id13 . 6) 31117) nil (23409 48321 633021 345000) 0 (:visualizer [2 0 1 #<marker in no buffer>])]) ((#("lua-indent-level" 0 15 (fontified t font-lock-fontified t help-echo #6# src-block t font-lock-multiline t face #22=(font-lock-warning-face org-block)) 15 16 (fontified t rear-nonsticky t font-lock-fontified t help-echo #6# src-block t font-lock-multiline t face #22#)) . 31142) (undo-tree-id14 . -16) (undo-tree-id15 . 16) (undo-tree-id16 . -16) (undo-tree-id17 . -16) (undo-tree-id18 . 16) (undo-tree-id19 . 16) (undo-tree-id20 . 16) (undo-tree-id21 . -16) (undo-tree-id22 . 16) (undo-tree-id23 . -16) 31158) nil (23409 48321 633050 174000) 0 (:visualizer [2 0 1 #<marker in no buffer>])]) ((nil rear-nonsticky nil 31141 . 31142) (nil help-echo nil 31105 . 31142) (nil fontified nil 31105 . 31142) (nil help-echo nil 31101 . 31105) (nil fontified nil 31101 . 31105) (nil help-echo nil 31100 . 31101) (nil fontified nil 31100 . 31101) (31100 . 31142)) nil (23409 48321 633063 102000) 0 (:visualizer [2 0 1 #<marker in no buffer>])] [nil nil ((nil rear-nonsticky nil 31140 . 31141) (nil help-echo nil 31104 . 31141) (nil fontified nil 31104 . 31141) (nil help-echo nil 31100 . 31104) (nil fontified nil 31100 . 31104) (nil help-echo nil 31099 . 31100) (nil fontified nil 31099 . 31100) (31099 . 31141)) ((#("(setq perl-indent-level my-indent)
      )" 0 1 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face #23=(org-block) help-echo nil) 1 5 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face (font-lock-keyword-face . #23#) help-echo nil) 5 41 (font-lock-fontified t src-block t fontified nil font-lock-multiline t face #23# help-echo nil) 41 42 (font-lock-fontified t src-block t fontified nil rear-nonsticky nil font-lock-multiline t face #23# help-echo nil)) . 31099) (undo-tree-id0 . -42) (undo-tree-id1 . 42) (undo-tree-id2 . 1) (undo-tree-id3 . -42) (nil rear-nonsticky t 31140 . 31141)) (23409 48314 42979 927000) 0 (:visualizer [0 1 0 #<marker in no buffer>])]) ((nil rear-nonsticky nil 31115 . 31116) (nil fontified nil 31100 . 31116) (31100 . 31116)) nil (23409 48314 44020 995000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((31093 . 31100)) nil (23409 48314 43059 50000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((31081 . 31093)) nil (23409 48314 43076 917000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) ((31079 . 31081) (t 23406 23968 850995 626000)) nil (23409 48314 43097 180000) 0 (:visualizer [3 0 1 #<marker in no buffer>])]) nil nil (23409 48314 43111 431000) 0 (:visualizer [3 0 1 #<marker in no buffer>])] #24# 13065 84 nil)